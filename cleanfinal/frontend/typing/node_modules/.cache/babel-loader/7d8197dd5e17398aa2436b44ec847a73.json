{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ody\\\\desktop\\\\prog\\\\cs50web\\\\finalapp\\\\cleanfinal\\\\frontend\\\\typing\\\\src\\\\containers\\\\TypingGame.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form';\n\nclass TypingGame extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateResponse = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.nextWord = event => {\n      if (event.code === 'Space') {\n        const word = this.state.input;\n\n        if (word.replace(\" \", \"\") === this.state.displayText[this.state.counter]) {\n          if (this.state.displayText[this.state.counter + 1] === \"\") {\n            console.log(\"done\");\n          }\n\n          console.log('nice');\n          this.setState({\n            score: this.state.score + 1,\n            input: \"\",\n            counter: this.state.counter + 1\n          });\n        } else {\n          this.setState({\n            input: \"\"\n          });\n        }\n      }\n    };\n\n    this.state = {\n      fullText: [],\n      displayText: [],\n      score: 0,\n      counter: 0,\n      input: \"\"\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://en.wikipedia.org/api/rest_v1/page/random/summary').then(res => {\n      const data = res.data.extract;\n      let splitData = data.replace(/[\\u{0080}-\\u{FFFF}]/gu, \"\");\n      splitData = splitData.split(\".\");\n      console.log(splitData);\n      this.setState(() => ({\n        fullText: splitData,\n        displayText: splitData[0].split(\" \")\n      }));\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"typing-test\",\n      children: [this.state.displayText.map(word => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"test-displayText\",\n        children: [word, \"\\xA0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gap-20\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        onKeyPress: this.nextWord,\n        onChange: this.updateResponse,\n        value: this.state.input,\n        className: \"form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gap-20\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Input: \", this.state.input]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Score: \", this.state.score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Counter: \", this.state.counter]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Current word: \", this.state.displayText[this.state.counter]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TypingGame;","map":{"version":3,"sources":["C:/Users/Ody/desktop/prog/cs50web/finalapp/cleanfinal/frontend/typing/src/containers/TypingGame.js"],"names":["React","axios","Form","TypingGame","Component","constructor","props","updateResponse","event","setState","input","target","value","nextWord","code","word","state","replace","displayText","counter","console","log","score","fullText","componentDidMount","get","then","res","data","extract","splitData","split","render","map"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nclass TypingGame extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fullText: [],\r\n      displayText: [],\r\n      score: 0,\r\n      counter: 0,\r\n      input: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('https://en.wikipedia.org/api/rest_v1/page/random/summary')\r\n    .then(res => {\r\n      const data = res.data.extract;\r\n      let splitData = data.replace(/[\\u{0080}-\\u{FFFF}]/gu, \"\");\r\n      splitData = splitData.split(\".\");\r\n      console.log(splitData);\r\n      this.setState(() => ({\r\n        fullText: splitData,\r\n        displayText: splitData[0].split(\" \")\r\n      }));\r\n    })\r\n  }\r\n  \r\n  updateResponse = (event) => {\r\n    this.setState({\r\n      input: event.target.value\r\n    })\r\n  }\r\n\r\n  nextWord = (event) => {\r\n    if (event.code === 'Space') {\r\n      const word = this.state.input;\r\n      \r\n      if (word.replace(\" \", \"\") === this.state.displayText[this.state.counter]) {\r\n        if (this.state.displayText[this.state.counter + 1] === \"\") {\r\n          console.log(\"done\");\r\n        }\r\n        console.log('nice');\r\n        this.setState({\r\n          score: this.state.score + 1,\r\n          input: \"\",\r\n          counter: this.state.counter + 1\r\n        })  \r\n      } else {\r\n        this.setState({\r\n          input: \"\"\r\n        })\r\n      }\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"typing-test\">\r\n        {this.state.displayText.map((word) =>\r\n          <span className=\"test-displayText\">{word}&nbsp;</span>\r\n        )}\r\n        <div className=\"gap-20\"></div>\r\n        <Form.Control onKeyPress={this.nextWord} onChange={this.updateResponse} value={this.state.input} className=\"form\"/>\r\n        <div className=\"gap-20\"></div>\r\n        \r\n        {/* Debugging info */}\r\n        <div>Input: {this.state.input}</div>\r\n        <div>Score: {this.state.score}</div>\r\n        <div>Counter: {this.state.counter}</div>\r\n        <div>Current word: {this.state.displayText[this.state.counter]}</div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default TypingGame;"]},"metadata":{},"sourceType":"module"}