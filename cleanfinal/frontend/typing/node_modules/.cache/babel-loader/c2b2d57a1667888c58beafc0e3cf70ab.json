{"ast":null,"code":"/*!\n * \n *   simple-keyboard v2.32.69\n *   https://github.com/hodgef/simple-keyboard\n * \n *   Copyright (c) Francisco Hodge (https://github.com/hodgef)\n * \n *   This source code is licensed under the MIT license found in the\n *   LICENSE file in the root directory of this source tree.\n *   \n */\n!function (t, e) {\n  \"object\" === typeof exports && \"object\" === typeof module ? module.exports = e() : \"function\" === typeof define && define.amd ? define(\"SimpleKeyboard\", [], e) : \"object\" === typeof exports ? exports.SimpleKeyboard = e() : t.SimpleKeyboard = e();\n}(this, function () {\n  return function (t) {\n    var e = {};\n\n    function __webpack_require__(n) {\n      if (e[n]) return e[n].exports;\n      var o = e[n] = {\n        i: n,\n        l: !1,\n        exports: {}\n      };\n      return t[n].call(o.exports, o, o.exports, __webpack_require__), o.l = !0, o.exports;\n    }\n\n    return __webpack_require__.m = t, __webpack_require__.c = e, __webpack_require__.d = function (t, e, n) {\n      __webpack_require__.o(t, e) || Object.defineProperty(t, e, {\n        enumerable: !0,\n        get: n\n      });\n    }, __webpack_require__.r = function (t) {\n      \"undefined\" !== typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {\n        value: \"Module\"\n      }), Object.defineProperty(t, \"__esModule\", {\n        value: !0\n      });\n    }, __webpack_require__.t = function (t, e) {\n      if (1 & e && (t = __webpack_require__(t)), 8 & e) return t;\n      if (4 & e && \"object\" === typeof t && t && t.__esModule) return t;\n      var n = Object.create(null);\n      if (__webpack_require__.r(n), Object.defineProperty(n, \"default\", {\n        enumerable: !0,\n        value: t\n      }), 2 & e && \"string\" != typeof t) for (var o in t) __webpack_require__.d(n, o, function (e) {\n        return t[e];\n      }.bind(null, o));\n      return n;\n    }, __webpack_require__.n = function (t) {\n      var e = t && t.__esModule ? function () {\n        return t.default;\n      } : function () {\n        return t;\n      };\n      return __webpack_require__.d(e, \"a\", e), e;\n    }, __webpack_require__.o = function (t, e) {\n      return Object.prototype.hasOwnProperty.call(t, e);\n    }, __webpack_require__.p = \"/\", __webpack_require__(__webpack_require__.s = 0);\n  }([function (t, e, n) {\n    t.exports = n(1);\n  }, function (t, e, n) {\n    \"use strict\";\n\n    n.r(e);\n\n    function _createForOfIteratorHelper(t, e) {\n      var n;\n\n      if (\"undefined\" === typeof Symbol || null == t[Symbol.iterator]) {\n        if (Array.isArray(t) || (n = function (t, e) {\n          if (!t) return;\n          if (\"string\" === typeof t) return _arrayLikeToArray(t, e);\n          var n = Object.prototype.toString.call(t).slice(8, -1);\n          \"Object\" === n && t.constructor && (n = t.constructor.name);\n          if (\"Map\" === n || \"Set\" === n) return Array.from(t);\n          if (\"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(t, e);\n        }(t)) || e && t && \"number\" === typeof t.length) {\n          n && (t = n);\n\n          var o = 0,\n              F = function () {};\n\n          return {\n            s: F,\n            n: function () {\n              return o >= t.length ? {\n                done: !0\n              } : {\n                done: !1,\n                value: t[o++]\n              };\n            },\n            e: function (t) {\n              throw t;\n            },\n            f: F\n          };\n        }\n\n        throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n      }\n\n      var i,\n          s = !0,\n          a = !1;\n      return {\n        s: function () {\n          n = t[Symbol.iterator]();\n        },\n        n: function () {\n          var t = n.next();\n          return s = t.done, t;\n        },\n        e: function (t) {\n          a = !0, i = t;\n        },\n        f: function () {\n          try {\n            s || null == n.return || n.return();\n          } finally {\n            if (a) throw i;\n          }\n        }\n      };\n    }\n\n    function _arrayLikeToArray(t, e) {\n      (null == e || e > t.length) && (e = t.length);\n\n      for (var n = 0, o = new Array(e); n < e; n++) o[n] = t[n];\n\n      return o;\n    }\n\n    function _typeof(t) {\n      return (_typeof = \"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator ? function (t) {\n        return typeof t;\n      } : function (t) {\n        return t && \"function\" === typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? \"symbol\" : typeof t;\n      })(t);\n    }\n\n    function _defineProperties(t, e) {\n      for (var n = 0; n < e.length; n++) {\n        var o = e[n];\n        o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(t, o.key, o);\n      }\n    }\n\n    var o,\n        i,\n        s,\n        a = function () {\n      function Utilities(t) {\n        var e = t.getOptions,\n            n = t.getCaretPosition,\n            o = t.getCaretPositionEnd,\n            i = t.dispatch;\n        !function (t, e) {\n          if (!(t instanceof e)) throw new TypeError(\"Cannot call a class as a function\");\n        }(this, Utilities), this.getOptions = e, this.getCaretPosition = n, this.getCaretPositionEnd = o, this.dispatch = i, Utilities.bindMethods(Utilities, this);\n      }\n\n      var t, e, n;\n      return t = Utilities, n = [{\n        key: \"bindMethods\",\n        value: function (t, e) {\n          var n,\n              o = _createForOfIteratorHelper(Object.getOwnPropertyNames(t.prototype));\n\n          try {\n            for (o.s(); !(n = o.n()).done;) {\n              var i = n.value;\n              \"constructor\" === i || \"bindMethods\" === i || (e[i] = e[i].bind(e));\n            }\n          } catch (s) {\n            o.e(s);\n          } finally {\n            o.f();\n          }\n        }\n      }], (e = [{\n        key: \"getButtonClass\",\n        value: function (t) {\n          var e = t.includes(\"{\") && t.includes(\"}\") && \"{//}\" !== t ? \"functionBtn\" : \"standardBtn\",\n              n = t.replace(\"{\", \"\").replace(\"}\", \"\"),\n              o = \"\";\n          return \"standardBtn\" !== e && (o = \" hg-button-\".concat(n)), \"hg-\".concat(e).concat(o);\n        }\n      }, {\n        key: \"getDefaultDiplay\",\n        value: function () {\n          return {\n            \"{bksp}\": \"backspace\",\n            \"{backspace}\": \"backspace\",\n            \"{enter}\": \"< enter\",\n            \"{shift}\": \"shift\",\n            \"{shiftleft}\": \"shift\",\n            \"{shiftright}\": \"shift\",\n            \"{alt}\": \"alt\",\n            \"{s}\": \"shift\",\n            \"{tab}\": \"tab\",\n            \"{lock}\": \"caps\",\n            \"{capslock}\": \"caps\",\n            \"{accept}\": \"Submit\",\n            \"{space}\": \" \",\n            \"{//}\": \" \",\n            \"{esc}\": \"esc\",\n            \"{escape}\": \"esc\",\n            \"{f1}\": \"f1\",\n            \"{f2}\": \"f2\",\n            \"{f3}\": \"f3\",\n            \"{f4}\": \"f4\",\n            \"{f5}\": \"f5\",\n            \"{f6}\": \"f6\",\n            \"{f7}\": \"f7\",\n            \"{f8}\": \"f8\",\n            \"{f9}\": \"f9\",\n            \"{f10}\": \"f10\",\n            \"{f11}\": \"f11\",\n            \"{f12}\": \"f12\",\n            \"{numpaddivide}\": \"/\",\n            \"{numlock}\": \"lock\",\n            \"{arrowup}\": \"\\u2191\",\n            \"{arrowleft}\": \"\\u2190\",\n            \"{arrowdown}\": \"\\u2193\",\n            \"{arrowright}\": \"\\u2192\",\n            \"{prtscr}\": \"print\",\n            \"{scrolllock}\": \"scroll\",\n            \"{pause}\": \"pause\",\n            \"{insert}\": \"ins\",\n            \"{home}\": \"home\",\n            \"{pageup}\": \"up\",\n            \"{delete}\": \"del\",\n            \"{end}\": \"end\",\n            \"{pagedown}\": \"down\",\n            \"{numpadmultiply}\": \"*\",\n            \"{numpadsubtract}\": \"-\",\n            \"{numpadadd}\": \"+\",\n            \"{numpadenter}\": \"enter\",\n            \"{period}\": \".\",\n            \"{numpaddecimal}\": \".\",\n            \"{numpad0}\": \"0\",\n            \"{numpad1}\": \"1\",\n            \"{numpad2}\": \"2\",\n            \"{numpad3}\": \"3\",\n            \"{numpad4}\": \"4\",\n            \"{numpad5}\": \"5\",\n            \"{numpad6}\": \"6\",\n            \"{numpad7}\": \"7\",\n            \"{numpad8}\": \"8\",\n            \"{numpad9}\": \"9\"\n          };\n        }\n      }, {\n        key: \"getButtonDisplayName\",\n        value: function (t, e, n) {\n          return (e = n ? Object.assign({}, this.getDefaultDiplay(), e) : e || this.getDefaultDiplay())[t] || t;\n        }\n      }, {\n        key: \"getUpdatedInput\",\n        value: function (t, e, n) {\n          var o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : n,\n              i = arguments.length > 4 && void 0 !== arguments[4] && arguments[4],\n              s = this.getOptions(),\n              a = [n, o, i],\n              r = e;\n          return (\"{bksp}\" === t || \"{backspace}\" === t) && r.length > 0 ? r = this.removeAt.apply(this, [r].concat(a)) : \"{space}\" === t ? r = this.addStringAt.apply(this, [r, \" \"].concat(a)) : \"{tab}\" !== t || \"boolean\" === typeof s.tabCharOnTab && !1 === s.tabCharOnTab ? \"{enter}\" !== t && \"{numpadenter}\" !== t || !s.newLineOnEnter ? t.includes(\"numpad\") && Number.isInteger(Number(t[t.length - 2])) ? r = this.addStringAt.apply(this, [r, t[t.length - 2]].concat(a)) : \"{numpaddivide}\" === t ? r = this.addStringAt.apply(this, [r, \"/\"].concat(a)) : \"{numpadmultiply}\" === t ? r = this.addStringAt.apply(this, [r, \"*\"].concat(a)) : \"{numpadsubtract}\" === t ? r = this.addStringAt.apply(this, [r, \"-\"].concat(a)) : \"{numpadadd}\" === t ? r = this.addStringAt.apply(this, [r, \"+\"].concat(a)) : \"{numpaddecimal}\" === t ? r = this.addStringAt.apply(this, [r, \".\"].concat(a)) : \"{\" === t || \"}\" === t ? r = this.addStringAt.apply(this, [r, t].concat(a)) : t.includes(\"{\") || t.includes(\"}\") || (r = this.addStringAt.apply(this, [r, t].concat(a))) : r = this.addStringAt.apply(this, [r, \"\\n\"].concat(a)) : r = this.addStringAt.apply(this, [r, \"\\t\"].concat(a)), r;\n        }\n      }, {\n        key: \"updateCaretPos\",\n        value: function (t, e) {\n          var n = this.updateCaretPosAction(t, e);\n          this.dispatch(function (t) {\n            t.setCaretPosition(n);\n          });\n        }\n      }, {\n        key: \"updateCaretPosAction\",\n        value: function (t, e) {\n          var n = this.getOptions(),\n              o = this.getCaretPosition();\n          return e ? o > 0 && (o -= t) : o += t, n.debug && console.log(\"Caret at:\", o, \"(\".concat(this.keyboardDOMClass, \")\")), o;\n        }\n      }, {\n        key: \"addStringAt\",\n        value: function (t, e) {\n          var n,\n              o = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : t.length,\n              i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : t.length,\n              s = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];\n          return o || 0 === o ? (n = [t.slice(0, o), e, t.slice(i)].join(\"\"), this.isMaxLengthReached() || s && this.updateCaretPos(e.length)) : n = t + e, n;\n        }\n      }, {\n        key: \"removeAt\",\n        value: function (t) {\n          var e,\n              n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : t.length,\n              o = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : t.length,\n              i = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];\n          if (0 === n && 0 === o) return t;\n\n          if (n === o) {\n            var s = /([\\uD800-\\uDBFF][\\uDC00-\\uDFFF])/g;\n            n && n >= 0 ? t.substring(n - 2, n).match(s) ? (e = t.substr(0, n - 2) + t.substr(n), i && this.updateCaretPos(2, !0)) : (e = t.substr(0, n - 1) + t.substr(n), i && this.updateCaretPos(1, !0)) : t.slice(-2).match(s) ? (e = t.slice(0, -2), i && this.updateCaretPos(2, !0)) : (e = t.slice(0, -1), i && this.updateCaretPos(1, !0));\n          } else e = t.slice(0, n) + t.slice(o), i && this.dispatch(function (t) {\n            t.setCaretPosition(n);\n          });\n\n          return e;\n        }\n      }, {\n        key: \"handleMaxLength\",\n        value: function (t, e) {\n          var n = this.getOptions(),\n              o = n.maxLength,\n              i = t[n.inputName],\n              s = e.length - 1 >= o;\n          if (e.length <= i.length) return !1;\n          if (Number.isInteger(o)) return n.debug && console.log(\"maxLength (num) reached:\", s), s ? (this.maxLengthReached = !0, !0) : (this.maxLengthReached = !1, !1);\n\n          if (\"object\" === _typeof(o)) {\n            var a = e.length - 1 >= o[n.inputName];\n            return n.debug && console.log(\"maxLength (obj) reached:\", a), a ? (this.maxLengthReached = !0, !0) : (this.maxLengthReached = !1, !1);\n          }\n        }\n      }, {\n        key: \"isMaxLengthReached\",\n        value: function () {\n          return Boolean(this.maxLengthReached);\n        }\n      }, {\n        key: \"isTouchDevice\",\n        value: function () {\n          return \"ontouchstart\" in window || navigator.maxTouchPoints;\n        }\n      }, {\n        key: \"pointerEventsSupported\",\n        value: function () {\n          return window.PointerEvent;\n        }\n      }, {\n        key: \"camelCase\",\n        value: function (t) {\n          return !!t && t.toLowerCase().trim().split(/[.\\-_\\s]/g).reduce(function (t, e) {\n            return e.length ? t + e[0].toUpperCase() + e.slice(1) : t;\n          });\n        }\n      }]) && _defineProperties(t.prototype, e), n && _defineProperties(t, n), Utilities;\n    }();\n\n    s = function () {}, (i = \"noop\") in (o = a) ? Object.defineProperty(o, i, {\n      value: s,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }) : o[i] = s;\n    var r = a;\n\n    function PhysicalKeyboard_defineProperties(t, e) {\n      for (var n = 0; n < e.length; n++) {\n        var o = e[n];\n        o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(t, o.key, o);\n      }\n    }\n\n    var u = function () {\n      function PhysicalKeyboard(t) {\n        var e = t.dispatch,\n            n = t.getOptions;\n        !function (t, e) {\n          if (!(t instanceof e)) throw new TypeError(\"Cannot call a class as a function\");\n        }(this, PhysicalKeyboard), this.dispatch = e, this.getOptions = n, r.bindMethods(PhysicalKeyboard, this);\n      }\n\n      var t, e, n;\n      return t = PhysicalKeyboard, (e = [{\n        key: \"handleHighlightKeyDown\",\n        value: function (t) {\n          var e = this.getOptions(),\n              n = this.getSimpleKeyboardLayoutKey(t);\n          this.dispatch(function (t) {\n            var o = t.getButtonElement(n) || t.getButtonElement(\"{\".concat(n, \"}\"));\n            o && (o.style.backgroundColor = e.physicalKeyboardHighlightBgColor || \"#dadce4\", o.style.color = e.physicalKeyboardHighlightTextColor || \"black\", e.physicalKeyboardHighlightPress && (o.onpointerdown || o.onmousedown || o.ontouchstart || r.noop)());\n          });\n        }\n      }, {\n        key: \"handleHighlightKeyUp\",\n        value: function (t) {\n          var e = this.getOptions(),\n              n = this.getSimpleKeyboardLayoutKey(t);\n          this.dispatch(function (t) {\n            var o = t.getButtonElement(n) || t.getButtonElement(\"{\".concat(n, \"}\"));\n            o && o.removeAttribute && (o.removeAttribute(\"style\"), e.physicalKeyboardHighlightPress && (o.onpointerup || o.onmouseup || o.ontouchend || r.noop)());\n          });\n        }\n      }, {\n        key: \"getSimpleKeyboardLayoutKey\",\n        value: function (t) {\n          var e;\n          return ((e = t.code.includes(\"Numpad\") || t.code.includes(\"Shift\") || t.code.includes(\"Space\") || t.code.includes(\"Backspace\") || t.code.includes(\"Control\") || t.code.includes(\"Alt\") || t.code.includes(\"Meta\") ? t.code : t.key) && e !== e.toUpperCase() || \"F\" === t.code[0] && Number.isInteger(Number(t.code[1])) && t.code.length <= 3) && (e = e ? e.toLowerCase() : e), e;\n        }\n      }]) && PhysicalKeyboard_defineProperties(t.prototype, e), n && PhysicalKeyboard_defineProperties(t, n), PhysicalKeyboard;\n    }();\n\n    function _toConsumableArray(t) {\n      return function (t) {\n        if (Array.isArray(t)) return Keyboard_arrayLikeToArray(t);\n      }(t) || function (t) {\n        if (\"undefined\" !== typeof Symbol && Symbol.iterator in Object(t)) return Array.from(t);\n      }(t) || function (t, e) {\n        if (!t) return;\n        if (\"string\" === typeof t) return Keyboard_arrayLikeToArray(t, e);\n        var n = Object.prototype.toString.call(t).slice(8, -1);\n        \"Object\" === n && t.constructor && (n = t.constructor.name);\n        if (\"Map\" === n || \"Set\" === n) return Array.from(t);\n        if (\"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Keyboard_arrayLikeToArray(t, e);\n      }(t) || function () {\n        throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n      }();\n    }\n\n    function Keyboard_arrayLikeToArray(t, e) {\n      (null == e || e > t.length) && (e = t.length);\n\n      for (var n = 0, o = new Array(e); n < e; n++) o[n] = t[n];\n\n      return o;\n    }\n\n    function Keyboard_classCallCheck(t, e) {\n      if (!(t instanceof e)) throw new TypeError(\"Cannot call a class as a function\");\n    }\n\n    function Keyboard_defineProperties(t, e) {\n      for (var n = 0; n < e.length; n++) {\n        var o = e[n];\n        o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(t, o.key, o);\n      }\n    }\n\n    function Keyboard_defineProperty(t, e, n) {\n      return e in t ? Object.defineProperty(t, e, {\n        value: n,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n      }) : t[e] = n, t;\n    }\n\n    var c = function () {\n      function SimpleKeyboard() {\n        var t = this;\n        Keyboard_classCallCheck(this, SimpleKeyboard), Keyboard_defineProperty(this, \"handleParams\", function (t) {\n          var e, n, o;\n          if (\"string\" === typeof t[0]) e = t[0].split(\".\").join(\"\"), n = document.querySelector(\".\".concat(e)), o = t[1];else if (t[0] instanceof HTMLDivElement) {\n            if (!t[0].className) throw console.warn(\"Any DOM element passed as parameter must have a class.\"), new Error(\"KEYBOARD_DOM_CLASS_ERROR\");\n            e = t[0].className.split(\" \")[0], n = t[0], o = t[1];\n          } else e = \"simple-keyboard\", n = document.querySelector(\".\".concat(e)), o = t[0];\n          return {\n            keyboardDOMClass: e,\n            keyboardDOM: n,\n            options: o\n          };\n        }), Keyboard_defineProperty(this, \"getOptions\", function () {\n          return t.options;\n        }), Keyboard_defineProperty(this, \"getCaretPosition\", function () {\n          return t.caretPosition;\n        }), Keyboard_defineProperty(this, \"getCaretPositionEnd\", function () {\n          return t.caretPositionEnd;\n        }), Keyboard_defineProperty(this, \"registerModule\", function (e, n) {\n          t.modules[e] || (t.modules[e] = {}), n(t.modules[e]);\n        }), Keyboard_defineProperty(this, \"getKeyboardClassString\", function () {\n          for (var e = arguments.length, n = new Array(e), o = 0; o < e; o++) n[o] = arguments[o];\n\n          var i = [t.keyboardDOMClass].concat(n).filter(function (t) {\n            return !!t;\n          });\n          return i.join(\" \");\n        });\n\n        for (var e = arguments.length, n = new Array(e), o = 0; o < e; o++) n[o] = arguments[o];\n\n        var i = this.handleParams(n),\n            s = i.keyboardDOMClass,\n            a = i.keyboardDOM,\n            c = i.options,\n            l = void 0 === c ? {} : c;\n        if (this.utilities = new r({\n          getOptions: this.getOptions,\n          getCaretPosition: this.getCaretPosition,\n          getCaretPositionEnd: this.getCaretPositionEnd,\n          dispatch: this.dispatch\n        }), this.caretPosition = null, this.caretPositionEnd = null, this.keyboardDOM = a, this.options = l, this.options.layoutName = this.options.layoutName || \"default\", this.options.theme = this.options.theme || \"hg-theme-default\", this.options.inputName = this.options.inputName || \"default\", this.options.preventMouseDownDefault = this.options.preventMouseDownDefault || !1, this.keyboardPluginClasses = \"\", r.bindMethods(SimpleKeyboard, this), this.input = {}, this.input[this.options.inputName] = \"\", this.keyboardDOMClass = s, this.buttonElements = {}, window.SimpleKeyboardInstances || (window.SimpleKeyboardInstances = {}), this.currentInstanceName = this.utilities.camelCase(this.keyboardDOMClass), window.SimpleKeyboardInstances[this.currentInstanceName] = this, this.allKeyboardInstances = window.SimpleKeyboardInstances, this.keyboardInstanceNames = Object.keys(window.SimpleKeyboardInstances), this.isFirstKeyboardInstance = this.keyboardInstanceNames[0] === this.currentInstanceName, this.physicalKeyboard = new u({\n          dispatch: this.dispatch,\n          getOptions: this.getOptions\n        }), !this.keyboardDOM) throw console.warn('\".'.concat(s, '\" was not found in the DOM.')), new Error(\"KEYBOARD_DOM_ERROR\");\n        this.render(), this.modules = {}, this.loadModules();\n      }\n\n      var t, e, n;\n      return t = SimpleKeyboard, (e = [{\n        key: \"setCaretPosition\",\n        value: function (t, e) {\n          this.caretPosition = t, this.caretPositionEnd = e || t;\n        }\n      }, {\n        key: \"handleButtonClicked\",\n        value: function (t) {\n          var e = this.options.debug;\n          if (\"{//}\" === t) return !1;\n          \"function\" === typeof this.options.onKeyPress && this.options.onKeyPress(t), this.input[this.options.inputName] || (this.input[this.options.inputName] = \"\");\n          var n = this.utilities.getUpdatedInput(t, this.input[this.options.inputName], this.caretPosition, this.caretPositionEnd);\n\n          if (this.input[this.options.inputName] !== n && (!this.options.inputPattern || this.options.inputPattern && this.inputPatternIsValid(n))) {\n            if (this.options.maxLength && this.utilities.handleMaxLength(this.input, n)) return !1;\n            this.input[this.options.inputName] = this.utilities.getUpdatedInput(t, this.input[this.options.inputName], this.caretPosition, this.caretPositionEnd, !0), e && console.log(\"Input changed:\", this.getAllInputs()), this.options.debug && console.log(\"Caret at: \", this.getCaretPosition(), this.getCaretPositionEnd(), \"(\".concat(this.keyboardDOMClass, \")\")), this.options.syncInstanceInputs && this.syncInstanceInputs(), \"function\" === typeof this.options.onChange && this.options.onChange(this.getInput(this.options.inputName, !0)), \"function\" === typeof this.options.onChangeAll && this.options.onChangeAll(this.getAllInputs());\n          }\n\n          e && console.log(\"Key pressed:\", t);\n        }\n      }, {\n        key: \"handleButtonMouseDown\",\n        value: function (t, e) {\n          var n = this;\n          e && (this.options.preventMouseDownDefault && e.preventDefault(), this.options.stopMouseDownPropagation && e.stopPropagation(), e.target.classList.add(this.activeButtonClass)), this.holdInteractionTimeout && clearTimeout(this.holdInteractionTimeout), this.holdTimeout && clearTimeout(this.holdTimeout), this.isMouseHold = !0, this.options.disableButtonHold || (this.holdTimeout = setTimeout(function () {\n            (n.isMouseHold && (!t.includes(\"{\") && !t.includes(\"}\") || \"{delete}\" === t || \"{backspace}\" === t || \"{bksp}\" === t || \"{space}\" === t || \"{tab}\" === t) || \"{arrowright}\" === t || \"{arrowleft}\" === t || \"{arrowup}\" === t || \"{arrowdown}\" === t) && (n.options.debug && console.log(\"Button held:\", t), n.handleButtonHold(t, e)), clearTimeout(n.holdTimeout);\n          }, 500));\n        }\n      }, {\n        key: \"handleButtonMouseUp\",\n        value: function () {\n          var t = this,\n              e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,\n              n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;\n          n && (this.options.preventMouseUpDefault && n.preventDefault(), this.options.stopMouseUpPropagation && n.stopPropagation()), this.recurseButtons(function (e) {\n            e.classList.remove(t.activeButtonClass);\n          }), this.isMouseHold = !1, this.holdInteractionTimeout && clearTimeout(this.holdInteractionTimeout), e && \"function\" === typeof this.options.onKeyReleased && this.options.onKeyReleased(e);\n        }\n      }, {\n        key: \"handleKeyboardContainerMouseDown\",\n        value: function (t) {\n          this.options.preventMouseDownDefault && t.preventDefault();\n        }\n      }, {\n        key: \"handleButtonHold\",\n        value: function (t) {\n          var e = this;\n          this.holdInteractionTimeout && clearTimeout(this.holdInteractionTimeout), this.holdInteractionTimeout = setTimeout(function () {\n            e.isMouseHold ? (e.handleButtonClicked(t), e.handleButtonHold(t)) : clearTimeout(e.holdInteractionTimeout);\n          }, 100);\n        }\n      }, {\n        key: \"syncInstanceInputs\",\n        value: function () {\n          var t = this;\n          this.dispatch(function (e) {\n            e.replaceInput(t.input), e.setCaretPosition(t.caretPosition, t.caretPositionEnd);\n          });\n        }\n      }, {\n        key: \"clearInput\",\n        value: function (t) {\n          t = t || this.options.inputName, this.input[t] = \"\", this.setCaretPosition(0), this.options.syncInstanceInputs && this.syncInstanceInputs();\n        }\n      }, {\n        key: \"getInput\",\n        value: function (t) {\n          var e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n\n          if (t = t || this.options.inputName, this.options.syncInstanceInputs && !e && this.syncInstanceInputs(), this.options.rtl) {\n            var n = this.input[t].replace(\"\\u202b\", \"\").replace(\"\\u202c\", \"\");\n            return \"\\u202b\" + n + \"\\u202c\";\n          }\n\n          return this.input[t];\n        }\n      }, {\n        key: \"getAllInputs\",\n        value: function () {\n          var t = this,\n              e = {};\n          return Object.keys(this.input).forEach(function (n) {\n            e[n] = t.getInput(n, !0);\n          }), e;\n        }\n      }, {\n        key: \"setInput\",\n        value: function (t, e) {\n          e = e || this.options.inputName, this.input[e] = t, this.options.syncInstanceInputs && this.syncInstanceInputs();\n        }\n      }, {\n        key: \"replaceInput\",\n        value: function (t) {\n          this.input = t;\n        }\n      }, {\n        key: \"setOptions\",\n        value: function () {\n          var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},\n              e = this.changedOptions(t);\n          this.options = Object.assign(this.options, t), e.length && (this.options.debug && console.log(\"changedOptions\", e), this.onSetOptions(t), this.render());\n        }\n      }, {\n        key: \"changedOptions\",\n        value: function (t) {\n          var e = this;\n          return Object.keys(t).filter(function (n) {\n            return JSON.stringify(t[n]) !== JSON.stringify(e.options[n]);\n          });\n        }\n      }, {\n        key: \"onSetOptions\",\n        value: function (t) {\n          t.inputName && (this.options.debug && console.log(\"inputName changed. caretPosition reset.\"), this.setCaretPosition(null));\n        }\n      }, {\n        key: \"clear\",\n        value: function () {\n          this.keyboardDOM.innerHTML = \"\", this.keyboardDOM.className = this.keyboardDOMClass, this.buttonElements = {};\n        }\n      }, {\n        key: \"dispatch\",\n        value: function (t) {\n          if (!window.SimpleKeyboardInstances) throw console.warn(\"SimpleKeyboardInstances is not defined. Dispatch cannot be called.\"), new Error(\"INSTANCES_VAR_ERROR\");\n          return Object.keys(window.SimpleKeyboardInstances).forEach(function (e) {\n            t(window.SimpleKeyboardInstances[e], e);\n          });\n        }\n      }, {\n        key: \"addButtonTheme\",\n        value: function (t, e) {\n          var n = this;\n          if (!e || !t) return !1;\n          t.split(\" \").forEach(function (o) {\n            e.split(\" \").forEach(function (e) {\n              n.options.buttonTheme || (n.options.buttonTheme = []);\n              var i = !1;\n              n.options.buttonTheme.map(function (t) {\n                if (t.class.split(\" \").includes(e)) {\n                  i = !0;\n                  var n = t.buttons.split(\" \");\n                  n.includes(o) || (i = !0, n.push(o), t.buttons = n.join(\" \"));\n                }\n\n                return t;\n              }), i || n.options.buttonTheme.push({\n                class: e,\n                buttons: t\n              });\n            });\n          }), this.render();\n        }\n      }, {\n        key: \"removeButtonTheme\",\n        value: function (t, e) {\n          var n = this;\n          if (!t && !e) return this.options.buttonTheme = [], this.render(), !1;\n          t && Array.isArray(this.options.buttonTheme) && this.options.buttonTheme.length && (t.split(\" \").forEach(function (t) {\n            n.options.buttonTheme.map(function (o, i) {\n              if (e && e.includes(o.class) || !e) {\n                var s = o.buttons.split(\" \").filter(function (e) {\n                  return e !== t;\n                });\n                s.length ? o.buttons = s.join(\" \") : (n.options.buttonTheme.splice(i, 1), o = null);\n              }\n\n              return o;\n            });\n          }), this.render());\n        }\n      }, {\n        key: \"getButtonElement\",\n        value: function (t) {\n          var e,\n              n = this.buttonElements[t];\n          return n && (e = n.length > 1 ? n : n[0]), e;\n        }\n      }, {\n        key: \"inputPatternIsValid\",\n        value: function (t) {\n          var e,\n              n = this.options.inputPattern;\n\n          if ((e = n instanceof RegExp ? n : n[this.options.inputName]) && t) {\n            var o = e.test(t);\n            return this.options.debug && console.log('inputPattern (\"'.concat(e, '\"): ').concat(o ? \"passed\" : \"did not pass!\")), o;\n          }\n\n          return !0;\n        }\n      }, {\n        key: \"setEventListeners\",\n        value: function () {\n          !this.isFirstKeyboardInstance && this.allKeyboardInstances || (this.options.debug && console.log(\"Caret handling started (\".concat(this.keyboardDOMClass, \")\")), document.addEventListener(\"keyup\", this.handleKeyUp), document.addEventListener(\"keydown\", this.handleKeyDown), document.addEventListener(\"mouseup\", this.handleMouseUp), document.addEventListener(\"touchend\", this.handleTouchEnd));\n        }\n      }, {\n        key: \"handleKeyUp\",\n        value: function (t) {\n          this.caretEventHandler(t), this.options.physicalKeyboardHighlight && this.physicalKeyboard.handleHighlightKeyUp(t);\n        }\n      }, {\n        key: \"handleKeyDown\",\n        value: function (t) {\n          this.options.physicalKeyboardHighlight && this.physicalKeyboard.handleHighlightKeyDown(t);\n        }\n      }, {\n        key: \"handleMouseUp\",\n        value: function (t) {\n          this.caretEventHandler(t);\n        }\n      }, {\n        key: \"handleTouchEnd\",\n        value: function (t) {\n          this.caretEventHandler(t);\n        }\n      }, {\n        key: \"caretEventHandler\",\n        value: function (t) {\n          var e;\n          t.target.tagName && (e = t.target.tagName.toLowerCase()), this.dispatch(function (n) {\n            var o = t.target === n.keyboardDOM || t.target && n.keyboardDOM.contains(t.target);\n            n.isMouseHold && (n.isMouseHold = !1), \"textarea\" !== e && \"input\" !== e || n.options.disableCaretPositioning ? !n.options.disableCaretPositioning && o || n.setCaretPosition(null) : (n.setCaretPosition(t.target.selectionStart, t.target.selectionEnd), n.options.debug && console.log(\"Caret at: \", n.getCaretPosition(), n.getCaretPositionEnd(), t && t.target.tagName.toLowerCase(), \"(\".concat(n.keyboardDOMClass, \")\")));\n          });\n        }\n      }, {\n        key: \"recurseButtons\",\n        value: function (t) {\n          var e = this;\n          t && Object.keys(this.buttonElements).forEach(function (n) {\n            return e.buttonElements[n].forEach(t);\n          });\n        }\n      }, {\n        key: \"destroy\",\n        value: function () {\n          this.options.debug && console.log(\"Destroying simple-keyboard instance: \".concat(this.currentInstanceName)), document.removeEventListener(\"keyup\", this.handleKeyUp), document.removeEventListener(\"keydown\", this.handleKeyDown), document.removeEventListener(\"mouseup\", this.handleMouseUp), document.removeEventListener(\"touchend\", this.handleTouchEnd), document.onpointerup = null, document.ontouchend = null, document.ontouchcancel = null, document.onmouseup = null;\n\n          var deleteButton = function (t) {\n            t.onpointerdown = null, t.onpointerup = null, t.onpointercancel = null, t.ontouchstart = null, t.ontouchend = null, t.ontouchcancel = null, t.onclick = null, t.onmousedown = null, t.onmouseup = null, t.remove(), t = null;\n          };\n\n          this.recurseButtons(deleteButton), this.recurseButtons = null, deleteButton = null, this.keyboardDOM.onpointerdown = null, this.keyboardDOM.ontouchstart = null, this.keyboardDOM.onmousedown = null, this.clear(), window.SimpleKeyboardInstances[this.currentInstanceName] = null, delete window.SimpleKeyboardInstances[this.currentInstanceName], this.initialized = !1;\n        }\n      }, {\n        key: \"getButtonThemeClasses\",\n        value: function (t) {\n          var e = this.options.buttonTheme,\n              n = [];\n          return Array.isArray(e) && e.forEach(function (e) {\n            if (e.class && \"string\" === typeof e.class && e.buttons && \"string\" === typeof e.buttons) {\n              var o = e.class.split(\" \");\n              e.buttons.split(\" \").includes(t) && (n = [].concat(_toConsumableArray(n), _toConsumableArray(o)));\n            } else console.warn('Incorrect \"buttonTheme\". Please check the documentation.', e);\n          }), n;\n        }\n      }, {\n        key: \"setDOMButtonAttributes\",\n        value: function (t, e) {\n          var n = this.options.buttonAttributes;\n          Array.isArray(n) && n.forEach(function (n) {\n            n.attribute && \"string\" === typeof n.attribute && n.value && \"string\" === typeof n.value && n.buttons && \"string\" === typeof n.buttons ? n.buttons.split(\" \").includes(t) && e(n.attribute, n.value) : console.warn('Incorrect \"buttonAttributes\". Please check the documentation.', n);\n          });\n        }\n      }, {\n        key: \"onTouchDeviceDetected\",\n        value: function () {\n          this.processAutoTouchEvents(), this.disableContextualWindow();\n        }\n      }, {\n        key: \"disableContextualWindow\",\n        value: function () {\n          window.oncontextmenu = function (t) {\n            if (t.target.classList.contains(\"hg-button\")) return t.preventDefault(), t.stopPropagation(), !1;\n          };\n        }\n      }, {\n        key: \"processAutoTouchEvents\",\n        value: function () {\n          this.options.autoUseTouchEvents && (this.options.useTouchEvents = !0, this.options.debug && console.log(\"autoUseTouchEvents: Touch device detected, useTouchEvents enabled.\"));\n        }\n      }, {\n        key: \"onInit\",\n        value: function () {\n          this.options.debug && console.log(\"\".concat(this.keyboardDOMClass, \" Initialized\")), this.setEventListeners(), \"function\" === typeof this.options.onInit && this.options.onInit();\n        }\n      }, {\n        key: \"beforeFirstRender\",\n        value: function () {\n          this.utilities.isTouchDevice() && this.onTouchDeviceDetected(), \"function\" === typeof this.options.beforeFirstRender && this.options.beforeFirstRender(), this.isFirstKeyboardInstance && this.utilities.pointerEventsSupported() && !this.options.useTouchEvents && !this.options.useMouseEvents && this.options.debug && console.log(\"Using PointerEvents as it is supported by this browser\"), this.options.useTouchEvents && this.options.debug && console.log(\"useTouchEvents has been enabled. Only touch events will be used.\");\n        }\n      }, {\n        key: \"beforeRender\",\n        value: function () {\n          \"function\" === typeof this.options.beforeRender && this.options.beforeRender();\n        }\n      }, {\n        key: \"onRender\",\n        value: function () {\n          \"function\" === typeof this.options.onRender && this.options.onRender();\n        }\n      }, {\n        key: \"onModulesLoaded\",\n        value: function () {\n          \"function\" === typeof this.options.onModulesLoaded && this.options.onModulesLoaded(this);\n        }\n      }, {\n        key: \"loadModules\",\n        value: function () {\n          var t = this;\n          Array.isArray(this.options.modules) && (this.options.modules.forEach(function (e) {\n            new e().init(t);\n          }), this.keyboardPluginClasses = \"modules-loaded\", this.render(), this.onModulesLoaded());\n        }\n      }, {\n        key: \"getModuleProp\",\n        value: function (t, e) {\n          return !!this.modules[t] && this.modules[t][e];\n        }\n      }, {\n        key: \"getModulesList\",\n        value: function () {\n          return Object.keys(this.modules);\n        }\n      }, {\n        key: \"parseRowDOMContainers\",\n        value: function (t, e, n, o) {\n          var i = this,\n              s = Array.from(t.children),\n              a = 0;\n          return s.length && n.forEach(function (n, r) {\n            var u = o[r];\n            if (!u || !(u > n)) return !1;\n            var c = n - a,\n                l = u - a,\n                h = document.createElement(\"div\");\n            h.className += \"hg-button-container\";\n            var d = \"\".concat(i.options.layoutName, \"-r\").concat(e, \"c\").concat(r);\n            h.setAttribute(\"data-skUID\", d);\n            var p = s.splice(c, l - c + 1);\n            a = l - c, p.forEach(function (t) {\n              return h.appendChild(t);\n            }), s.splice(c, 0, h), t.innerHTML = \"\", s.forEach(function (e) {\n              return t.appendChild(e);\n            }), i.options.debug && console.log(\"rowDOMContainer\", p, c, l, a + 1);\n          }), t;\n        }\n      }, {\n        key: \"render\",\n        value: function () {\n          var t = this;\n          this.clear(), this.initialized || this.beforeFirstRender(), this.beforeRender();\n          var e = \"hg-layout-\".concat(this.options.layoutName),\n              n = this.options.layout || {\n            default: [\"` 1 2 3 4 5 6 7 8 9 0 - = {bksp}\", \"{tab} q w e r t y u i o p [ ] \\\\\", \"{lock} a s d f g h j k l ; ' {enter}\", \"{shift} z x c v b n m , . / {shift}\", \".com @ {space}\"],\n            shift: [\"~ ! @ # $ % ^ & * ( ) _ + {bksp}\", \"{tab} Q W E R T Y U I O P { } |\", '{lock} A S D F G H J K L : \" {enter}', \"{shift} Z X C V B N M < > ? {shift}\", \".com @ {space}\"]\n          },\n              o = this.options.useTouchEvents || !1,\n              i = o ? \"hg-touch-events\" : \"\",\n              s = this.options.useMouseEvents || !1,\n              a = this.options.disableRowButtonContainers;\n          this.keyboardDOM.className = this.getKeyboardClassString(this.options.theme, e, this.keyboardPluginClasses, i), n[this.options.layoutName].forEach(function (e, n) {\n            var i = e.split(\" \"),\n                r = document.createElement(\"div\");\n            r.className += \"hg-row\";\n            var u = [],\n                c = [];\n            i.forEach(function (e, i) {\n              var l,\n                  h = !a && \"string\" === typeof e && e.length > 1 && 0 === e.indexOf(\"[\"),\n                  d = !a && \"string\" === typeof e && e.length > 1 && e.indexOf(\"]\") === e.length - 1;\n              h && (u.push(i), e = e.replace(/\\[/g, \"\")), d && (c.push(i), e = e.replace(/\\]/g, \"\"));\n              var p = t.utilities.getButtonClass(e),\n                  f = t.utilities.getButtonDisplayName(e, t.options.display, t.options.mergeDisplay),\n                  y = t.options.useButtonTag ? \"button\" : \"div\",\n                  b = document.createElement(y);\n              b.className += \"hg-button \".concat(p), (l = b.classList).add.apply(l, _toConsumableArray(t.getButtonThemeClasses(e))), t.setDOMButtonAttributes(e, function (t, e) {\n                b.setAttribute(t, e);\n              }), t.activeButtonClass = \"hg-activeButton\", !t.utilities.pointerEventsSupported() || o || s ? o ? (b.ontouchstart = function (n) {\n                t.handleButtonClicked(e), t.handleButtonMouseDown(e, n);\n              }, b.ontouchend = function (n) {\n                t.handleButtonMouseUp(e, n);\n              }, b.ontouchcancel = function (n) {\n                t.handleButtonMouseUp(e, n);\n              }) : (b.onclick = function () {\n                t.isMouseHold = !1, t.handleButtonClicked(e);\n              }, b.onmousedown = function (n) {\n                t.handleButtonMouseDown(e, n);\n              }, b.onmouseup = function (n) {\n                t.handleButtonMouseUp(e, n);\n              }) : (b.onpointerdown = function (n) {\n                t.handleButtonClicked(e), t.handleButtonMouseDown(e, n);\n              }, b.onpointerup = function (n) {\n                t.handleButtonMouseUp(e, n);\n              }, b.onpointercancel = function (n) {\n                t.handleButtonMouseUp(e, n);\n              }), b.setAttribute(\"data-skBtn\", e);\n              var m = \"\".concat(t.options.layoutName, \"-r\").concat(n, \"b\").concat(i);\n              b.setAttribute(\"data-skBtnUID\", m);\n              var g = document.createElement(\"span\");\n              g.innerHTML = f, b.appendChild(g), t.buttonElements[e] || (t.buttonElements[e] = []), t.buttonElements[e].push(b), r.appendChild(b);\n            }), r = t.parseRowDOMContainers(r, n, u, c), t.keyboardDOM.appendChild(r);\n          }), this.onRender(), this.initialized || (this.initialized = !0, !this.utilities.pointerEventsSupported() || o || s ? o ? (document.ontouchend = function () {\n            return t.handleButtonMouseUp();\n          }, document.ontouchcancel = function () {\n            return t.handleButtonMouseUp();\n          }, this.keyboardDOM.ontouchstart = function (e) {\n            return t.handleKeyboardContainerMouseDown(e);\n          }) : o || (document.onmouseup = function () {\n            return t.handleButtonMouseUp();\n          }, this.keyboardDOM.onmousedown = function (e) {\n            return t.handleKeyboardContainerMouseDown(e);\n          }) : (document.onpointerup = function () {\n            return t.handleButtonMouseUp();\n          }, this.keyboardDOM.onpointerdown = function (e) {\n            return t.handleKeyboardContainerMouseDown(e);\n          }), this.onInit());\n        }\n      }]) && Keyboard_defineProperties(t.prototype, e), n && Keyboard_defineProperties(t, n), SimpleKeyboard;\n    }();\n\n    e.default = c;\n  }]);\n});","map":{"version":3,"sources":["../../webpack/universalModuleDefinition","../../webpack/bootstrap","services/Utilities.js","services/PhysicalKeyboard.js","components/Keyboard.js","services/KeyboardLayout.js","index.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Utilities","getOptions","getCaretPosition","getCaretPositionEnd","dispatch","bindMethods","button","buttonTypeClass","includes","buttonWithoutBraces","replace","buttonNormalized","display","mergeDisplay","assign","getDefaultDiplay","input","caretPos","caretPosEnd","moveCaret","options","commonParams","output","length","removeAt","addStringAt","tabCharOnTab","newLineOnEnter","Number","isInteger","minus","newCaretPos","updateCaretPosAction","instance","setCaretPosition","caretPosition","debug","console","log","keyboardDOMClass","source","str","position","positionEnd","slice","join","isMaxLengthReached","updateCaretPos","emojiMatchedReg","substring","match","substr","inputObj","updatedInput","maxLength","currentInput","inputName","condition","maxLengthReached","Boolean","window","navigator","maxTouchPoints","PointerEvent","myClass","myMethod","getOwnPropertyNames","toLowerCase","trim","split","reduce","word","toUpperCase","PhysicalKeyboard","event","buttonPressed","getSimpleKeyboardLayoutKey","buttonDOM","getButtonElement","style","backgroundColor","physicalKeyboardHighlightBgColor","color","physicalKeyboardHighlightTextColor","physicalKeyboardHighlightPress","onpointerdown","onmousedown","ontouchstart","noop","removeAttribute","onpointerup","onmouseup","ontouchend","code","params","keyboardDOM","handleParams","utilities","caretPositionEnd","layoutName","theme","preventMouseDownDefault","keyboardPluginClasses","SimpleKeyboard","buttonElements","currentInstanceName","camelCase","allKeyboardInstances","keyboardInstanceNames","keys","isFirstKeyboardInstance","physicalKeyboard","render","warn","Error","loadModules","document","querySelector","HTMLDivElement","className","endPosition","onKeyPress","getUpdatedInput","inputPattern","inputPatternIsValid","handleMaxLength","getAllInputs","syncInstanceInputs","onChange","getInput","onChangeAll","e","preventDefault","stopMouseDownPropagation","stopPropagation","target","classList","add","activeButtonClass","holdInteractionTimeout","clearTimeout","holdTimeout","isMouseHold","disableButtonHold","setTimeout","handleButtonHold","preventMouseUpDefault","stopMouseUpPropagation","recurseButtons","buttonElement","remove","onKeyReleased","handleButtonClicked","replaceInput","skipSync","rtl","inputWithoutRTLControl","forEach","changedOptions","onSetOptions","newOptions","filter","JSON","stringify","optionName","innerHTML","callback","buttons","buttonTheme","classNameFound","map","class","classNameItem","buttonThemeArray","push","Array","isArray","index","filteredButtonArray","item","splice","buttonArr","inputVal","inputPatternRaw","RegExp","didInputMatch","test","addEventListener","handleKeyUp","handleKeyDown","handleMouseUp","handleTouchEnd","caretEventHandler","physicalKeyboardHighlight","handleHighlightKeyUp","handleHighlightKeyDown","targetTagName","tagName","isKeyboard","contains","disableCaretPositioning","selectionStart","selectionEnd","fn","buttonName","removeEventListener","ontouchcancel","deleteButton","onpointercancel","onclick","clear","initialized","buttonClasses","themeObj","themeObjClasses","buttonAttributes","attrObj","attribute","processAutoTouchEvents","disableContextualWindow","oncontextmenu","autoUseTouchEvents","useTouchEvents","setEventListeners","onInit","isTouchDevice","onTouchDeviceDetected","beforeFirstRender","pointerEventsSupported","useMouseEvents","beforeRender","onRender","onModulesLoaded","initCallback","KeyboardModule","init","prop","rowDOM","rowIndex","containerStartIndexes","containerEndIndexes","rowDOMArray","from","children","removedElements","startIndex","arrIndex","endIndex","updated_startIndex","updated_endIndex","containerDOM","createElement","containerUID","setAttribute","containedElements","appendChild","element","baseDOMClasses","keyboardClasses","DOMClass","layoutClass","layout","useTouchEventsClass","disableRowButtonContainers","getKeyboardClassString","row","rIndex","rowArray","bIndex","buttonHasContainerStart","indexOf","buttonHasContainerEnd","fctBtnClass","getButtonClass","buttonDisplayName","getButtonDisplayName","buttonType","useButtonTag","getButtonThemeClasses","setDOMButtonAttributes","handleButtonMouseDown","handleButtonMouseUp","buttonUID","buttonSpanDOM","parseRowDOMContainers","handleKeyboardContainerMouseDown","default","shift"],"mappings":"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","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"SimpleKeyboard\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SimpleKeyboard\"] = factory();\n\telse\n\t\troot[\"SimpleKeyboard\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * Utility Service\n */\nclass Utilities {\n  /**\n   * Creates an instance of the Utility service\n   */\n  constructor({ getOptions, getCaretPosition, getCaretPositionEnd, dispatch }) {\n    this.getOptions = getOptions;\n    this.getCaretPosition = getCaretPosition;\n    this.getCaretPositionEnd = getCaretPositionEnd;\n    this.dispatch = dispatch;\n\n    /**\n     * Bindings\n     */\n    Utilities.bindMethods(Utilities, this);\n  }\n\n  /**\n   * Adds default classes to a given button\n   *\n   * @param  {string} button The button's layout name\n   * @return {string} The classes to be added to the button\n   */\n  getButtonClass(button) {\n    const buttonTypeClass =\n      button.includes(\"{\") && button.includes(\"}\") && button !== \"{//}\"\n        ? \"functionBtn\"\n        : \"standardBtn\";\n    const buttonWithoutBraces = button.replace(\"{\", \"\").replace(\"}\", \"\");\n    let buttonNormalized = \"\";\n\n    if (buttonTypeClass !== \"standardBtn\")\n      buttonNormalized = ` hg-button-${buttonWithoutBraces}`;\n\n    return `hg-${buttonTypeClass}${buttonNormalized}`;\n  }\n\n  /**\n   * Default button display labels\n   */\n  getDefaultDiplay() {\n    return {\n      \"{bksp}\": \"backspace\",\n      \"{backspace}\": \"backspace\",\n      \"{enter}\": \"< enter\",\n      \"{shift}\": \"shift\",\n      \"{shiftleft}\": \"shift\",\n      \"{shiftright}\": \"shift\",\n      \"{alt}\": \"alt\",\n      \"{s}\": \"shift\",\n      \"{tab}\": \"tab\",\n      \"{lock}\": \"caps\",\n      \"{capslock}\": \"caps\",\n      \"{accept}\": \"Submit\",\n      \"{space}\": \" \",\n      \"{//}\": \" \",\n      \"{esc}\": \"esc\",\n      \"{escape}\": \"esc\",\n      \"{f1}\": \"f1\",\n      \"{f2}\": \"f2\",\n      \"{f3}\": \"f3\",\n      \"{f4}\": \"f4\",\n      \"{f5}\": \"f5\",\n      \"{f6}\": \"f6\",\n      \"{f7}\": \"f7\",\n      \"{f8}\": \"f8\",\n      \"{f9}\": \"f9\",\n      \"{f10}\": \"f10\",\n      \"{f11}\": \"f11\",\n      \"{f12}\": \"f12\",\n      \"{numpaddivide}\": \"/\",\n      \"{numlock}\": \"lock\",\n      \"{arrowup}\": \"↑\",\n      \"{arrowleft}\": \"←\",\n      \"{arrowdown}\": \"↓\",\n      \"{arrowright}\": \"→\",\n      \"{prtscr}\": \"print\",\n      \"{scrolllock}\": \"scroll\",\n      \"{pause}\": \"pause\",\n      \"{insert}\": \"ins\",\n      \"{home}\": \"home\",\n      \"{pageup}\": \"up\",\n      \"{delete}\": \"del\",\n      \"{end}\": \"end\",\n      \"{pagedown}\": \"down\",\n      \"{numpadmultiply}\": \"*\",\n      \"{numpadsubtract}\": \"-\",\n      \"{numpadadd}\": \"+\",\n      \"{numpadenter}\": \"enter\",\n      \"{period}\": \".\",\n      \"{numpaddecimal}\": \".\",\n      \"{numpad0}\": \"0\",\n      \"{numpad1}\": \"1\",\n      \"{numpad2}\": \"2\",\n      \"{numpad3}\": \"3\",\n      \"{numpad4}\": \"4\",\n      \"{numpad5}\": \"5\",\n      \"{numpad6}\": \"6\",\n      \"{numpad7}\": \"7\",\n      \"{numpad8}\": \"8\",\n      \"{numpad9}\": \"9\"\n    };\n  }\n  /**\n   * Returns the display (label) name for a given button\n   *\n   * @param  {string} button The button's layout name\n   * @param  {object} display The provided display option\n   * @param  {boolean} mergeDisplay Whether the provided param value should be merged with the default one.\n   */\n  getButtonDisplayName(button, display, mergeDisplay) {\n    if (mergeDisplay) {\n      display = Object.assign({}, this.getDefaultDiplay(), display);\n    } else {\n      display = display || this.getDefaultDiplay();\n    }\n\n    return display[button] || button;\n  }\n\n  /**\n   * Returns the updated input resulting from clicking a given button\n   *\n   * @param  {string} button The button's layout name\n   * @param  {string} input The input string\n   * @param  {number} caretPos The cursor's current position\n   * @param  {number} caretPosEnd The cursor's current end position\n   * @param  {boolean} moveCaret Whether to update simple-keyboard's cursor\n   */\n  getUpdatedInput(\n    button,\n    input,\n    caretPos,\n    caretPosEnd = caretPos,\n    moveCaret = false\n  ) {\n    const options = this.getOptions();\n    const commonParams = [caretPos, caretPosEnd, moveCaret];\n\n    let output = input;\n\n    if (\n      (button === \"{bksp}\" || button === \"{backspace}\") &&\n      output.length > 0\n    ) {\n      output = this.removeAt(output, ...commonParams);\n    } else if (button === \"{space}\")\n      output = this.addStringAt(output, \" \", ...commonParams);\n    else if (\n      button === \"{tab}\" &&\n      !(\n        typeof options.tabCharOnTab === \"boolean\" &&\n        options.tabCharOnTab === false\n      )\n    ) {\n      output = this.addStringAt(output, \"\\t\", ...commonParams);\n    } else if (\n      (button === \"{enter}\" || button === \"{numpadenter}\") &&\n      options.newLineOnEnter\n    )\n      output = this.addStringAt(output, \"\\n\", ...commonParams);\n    else if (\n      button.includes(\"numpad\") &&\n      Number.isInteger(Number(button[button.length - 2]))\n    ) {\n      output = this.addStringAt(\n        output,\n        button[button.length - 2],\n        ...commonParams\n      );\n    } else if (button === \"{numpaddivide}\")\n      output = this.addStringAt(output, \"/\", ...commonParams);\n    else if (button === \"{numpadmultiply}\")\n      output = this.addStringAt(output, \"*\", ...commonParams);\n    else if (button === \"{numpadsubtract}\")\n      output = this.addStringAt(output, \"-\", ...commonParams);\n    else if (button === \"{numpadadd}\")\n      output = this.addStringAt(output, \"+\", ...commonParams);\n    else if (button === \"{numpaddecimal}\")\n      output = this.addStringAt(output, \".\", ...commonParams);\n    else if (button === \"{\" || button === \"}\")\n      output = this.addStringAt(output, button, ...commonParams);\n    else if (!button.includes(\"{\") && !button.includes(\"}\"))\n      output = this.addStringAt(output, button, ...commonParams);\n\n    return output;\n  }\n\n  /**\n   * Moves the cursor position by a given amount\n   *\n   * @param  {number} length Represents by how many characters the input should be moved\n   * @param  {boolean} minus Whether the cursor should be moved to the left or not.\n   */\n  updateCaretPos(length, minus) {\n    const newCaretPos = this.updateCaretPosAction(length, minus);\n\n    this.dispatch(instance => {\n      instance.setCaretPosition(newCaretPos);\n    });\n  }\n\n  /**\n   * Action method of updateCaretPos\n   *\n   * @param  {number} length Represents by how many characters the input should be moved\n   * @param  {boolean} minus Whether the cursor should be moved to the left or not.\n   */\n  updateCaretPosAction(length, minus) {\n    const options = this.getOptions();\n    let caretPosition = this.getCaretPosition();\n\n    if (minus) {\n      if (caretPosition > 0) caretPosition = caretPosition - length;\n    } else {\n      caretPosition = caretPosition + length;\n    }\n\n    if (options.debug) {\n      console.log(\"Caret at:\", caretPosition, `(${this.keyboardDOMClass})`);\n    }\n\n    return caretPosition;\n  }\n\n  /**\n   * Adds a string to the input at a given position\n   *\n   * @param  {string} source The source input\n   * @param  {string} str The string to add\n   * @param  {number} position The (cursor) position where the string should be added\n   * @param  {boolean} moveCaret Whether to update simple-keyboard's cursor\n   */\n  addStringAt(\n    source,\n    str,\n    position = source.length,\n    positionEnd = source.length,\n    moveCaret = false\n  ) {\n    let output;\n\n    if (!position && position !== 0) {\n      output = source + str;\n    } else {\n      output = [source.slice(0, position), str, source.slice(positionEnd)].join(\n        \"\"\n      );\n\n      /**\n       * Avoid caret position change when maxLength is set\n       */\n      if (!this.isMaxLengthReached()) {\n        if (moveCaret) this.updateCaretPos(str.length);\n      }\n    }\n\n    return output;\n  }\n\n  /**\n   * Removes an amount of characters at a given position\n   *\n   * @param  {string} source The source input\n   * @param  {number} position The (cursor) position from where the characters should be removed\n   * @param  {boolean} moveCaret Whether to update simple-keyboard's cursor\n   */\n  removeAt(\n    source,\n    position = source.length,\n    positionEnd = source.length,\n    moveCaret = false\n  ) {\n    if (position === 0 && positionEnd === 0) {\n      return source;\n    }\n\n    let output;\n\n    if (position === positionEnd) {\n      let prevTwoChars;\n      let emojiMatched;\n      const emojiMatchedReg = /([\\uD800-\\uDBFF][\\uDC00-\\uDFFF])/g;\n\n      /**\n       * Emojis are made out of two characters, so we must take a custom approach to trim them.\n       * For more info: https://mathiasbynens.be/notes/javascript-unicode\n       */\n      if (position && position >= 0) {\n        prevTwoChars = source.substring(position - 2, position);\n        emojiMatched = prevTwoChars.match(emojiMatchedReg);\n\n        if (emojiMatched) {\n          output = source.substr(0, position - 2) + source.substr(position);\n          if (moveCaret) this.updateCaretPos(2, true);\n        } else {\n          output = source.substr(0, position - 1) + source.substr(position);\n          if (moveCaret) this.updateCaretPos(1, true);\n        }\n      } else {\n        prevTwoChars = source.slice(-2);\n        emojiMatched = prevTwoChars.match(emojiMatchedReg);\n\n        if (emojiMatched) {\n          output = source.slice(0, -2);\n          if (moveCaret) this.updateCaretPos(2, true);\n        } else {\n          output = source.slice(0, -1);\n          if (moveCaret) this.updateCaretPos(1, true);\n        }\n      }\n    } else {\n      output = source.slice(0, position) + source.slice(positionEnd);\n      if (moveCaret) {\n        this.dispatch(instance => {\n          instance.setCaretPosition(position);\n        });\n      }\n    }\n\n    return output;\n  }\n  /**\n   * Determines whether the maxLength has been reached. This function is called when the maxLength option it set.\n   *\n   * @param  {object} inputObj\n   * @param  {string} updatedInput\n   */\n  handleMaxLength(inputObj, updatedInput) {\n    const options = this.getOptions();\n    const maxLength = options.maxLength;\n    const currentInput = inputObj[options.inputName];\n    const condition = updatedInput.length - 1 >= maxLength;\n\n    if (\n      /**\n       * If pressing this button won't add more characters\n       * We exit out of this limiter function\n       */\n      updatedInput.length <= currentInput.length\n    ) {\n      return false;\n    }\n\n    if (Number.isInteger(maxLength)) {\n      if (options.debug) {\n        console.log(\"maxLength (num) reached:\", condition);\n      }\n\n      if (condition) {\n        /**\n         * @type {boolean} Boolean value that shows whether maxLength has been reached\n         */\n        this.maxLengthReached = true;\n        return true;\n      } else {\n        this.maxLengthReached = false;\n        return false;\n      }\n    }\n\n    if (typeof maxLength === \"object\") {\n      const condition = updatedInput.length - 1 >= maxLength[options.inputName];\n\n      if (options.debug) {\n        console.log(\"maxLength (obj) reached:\", condition);\n      }\n\n      if (condition) {\n        this.maxLengthReached = true;\n        return true;\n      } else {\n        this.maxLengthReached = false;\n        return false;\n      }\n    }\n  }\n\n  /**\n   * Gets the current value of maxLengthReached\n   */\n  isMaxLengthReached() {\n    return Boolean(this.maxLengthReached);\n  }\n\n  /**\n   * Determines whether a touch device is being used\n   */\n  isTouchDevice() {\n    return \"ontouchstart\" in window || navigator.maxTouchPoints;\n  }\n\n  /**\n   * Determines whether pointer events are supported\n   */\n  pointerEventsSupported() {\n    return window.PointerEvent;\n  }\n\n  /**\n   * Bind all methods in a given class\n   */\n\n  static bindMethods(myClass, instance) {\n    // eslint-disable-next-line no-unused-vars\n    for (const myMethod of Object.getOwnPropertyNames(myClass.prototype)) {\n      const excludeMethod =\n        myMethod === \"constructor\" || myMethod === \"bindMethods\";\n      if (!excludeMethod) {\n        instance[myMethod] = instance[myMethod].bind(instance);\n      }\n    }\n  }\n\n  /**\n   * Transforms an arbitrary string to camelCase\n   *\n   * @param  {string} str The string to transform.\n   */\n  camelCase(str) {\n    if (!str) return false;\n\n    return str\n      .toLowerCase()\n      .trim()\n      .split(/[.\\-_\\s]/g)\n      .reduce((str, word) =>\n        word.length ? str + word[0].toUpperCase() + word.slice(1) : str\n      );\n  }\n\n  static noop = () => {};\n}\n\nexport default Utilities;\n","import Utilities from \"../services/Utilities\";\n\n/**\n * Physical Keyboard Service\n */\nclass PhysicalKeyboard {\n  /**\n   * Creates an instance of the PhysicalKeyboard service\n   */\n  constructor({ dispatch, getOptions }) {\n    /**\n     * @type {object} A simple-keyboard instance\n     */\n    this.dispatch = dispatch;\n    this.getOptions = getOptions;\n\n    /**\n     * Bindings\n     */\n    Utilities.bindMethods(PhysicalKeyboard, this);\n  }\n\n  handleHighlightKeyDown(event) {\n    const options = this.getOptions();\n    const buttonPressed = this.getSimpleKeyboardLayoutKey(event);\n\n    this.dispatch(instance => {\n      const buttonDOM =\n        instance.getButtonElement(buttonPressed) ||\n        instance.getButtonElement(`{${buttonPressed}}`);\n\n      if (buttonDOM) {\n        buttonDOM.style.backgroundColor =\n          options.physicalKeyboardHighlightBgColor || \"#dadce4\";\n        buttonDOM.style.color =\n          options.physicalKeyboardHighlightTextColor || \"black\";\n\n        if (options.physicalKeyboardHighlightPress) {\n          /**\n           * Trigger pointerdown\n           */\n          (\n            buttonDOM.onpointerdown ||\n            buttonDOM.onmousedown ||\n            buttonDOM.ontouchstart ||\n            Utilities.noop\n          )();\n        }\n      }\n    });\n  }\n\n  handleHighlightKeyUp(event) {\n    const options = this.getOptions();\n    const buttonPressed = this.getSimpleKeyboardLayoutKey(event);\n\n    this.dispatch(instance => {\n      const buttonDOM =\n        instance.getButtonElement(buttonPressed) ||\n        instance.getButtonElement(`{${buttonPressed}}`);\n\n      if (buttonDOM && buttonDOM.removeAttribute) {\n        buttonDOM.removeAttribute(\"style\");\n\n        if (options.physicalKeyboardHighlightPress) {\n          /**\n           * Trigger pointerup\n           */\n          (\n            buttonDOM.onpointerup ||\n            buttonDOM.onmouseup ||\n            buttonDOM.ontouchend ||\n            Utilities.noop\n          )();\n        }\n      }\n    });\n  }\n\n  /**\n   * Transforms a KeyboardEvent's \"key.code\" string into a simple-keyboard layout format\n   * @param  {object} event The KeyboardEvent\n   */\n  getSimpleKeyboardLayoutKey(event) {\n    let output;\n\n    if (\n      event.code.includes(\"Numpad\") ||\n      event.code.includes(\"Shift\") ||\n      event.code.includes(\"Space\") ||\n      event.code.includes(\"Backspace\") ||\n      event.code.includes(\"Control\") ||\n      event.code.includes(\"Alt\") ||\n      event.code.includes(\"Meta\")\n    ) {\n      output = event.code;\n    } else {\n      output = event.key;\n    }\n\n    /**\n     * Casting key to lowercase\n     */\n    if (\n      (output && output !== output.toUpperCase()) ||\n      (event.code[0] === \"F\" &&\n        Number.isInteger(Number(event.code[1])) &&\n        event.code.length <= 3)\n    ) {\n      output = output ? output.toLowerCase() : output;\n    }\n\n    return output;\n  }\n}\n\nexport default PhysicalKeyboard;\n","import \"./Keyboard.css\";\n\n// Services\nimport { getDefaultLayout } from \"../services/KeyboardLayout\";\nimport PhysicalKeyboard from \"../services/PhysicalKeyboard\";\nimport Utilities from \"../services/Utilities\";\n\n/**\n * Root class for simple-keyboard\n * This class:\n * - Parses the options\n * - Renders the rows and buttons\n * - Handles button functionality\n */\nclass SimpleKeyboard {\n  /**\n   * Creates an instance of SimpleKeyboard\n   * @param {Array} params If first parameter is a string, it is considered the container class. The second parameter is then considered the options object. If first parameter is an object, it is considered the options object.\n   */\n  constructor(...params) {\n    const { keyboardDOMClass, keyboardDOM, options = {} } = this.handleParams(\n      params\n    );\n\n    /**\n     * Initializing Utilities\n     */\n    this.utilities = new Utilities({\n      getOptions: this.getOptions,\n      getCaretPosition: this.getCaretPosition,\n      getCaretPositionEnd: this.getCaretPositionEnd,\n      dispatch: this.dispatch\n    });\n\n    /**\n     * Caret position\n     */\n    this.caretPosition = null;\n\n    /**\n     * Caret position end\n     */\n    this.caretPositionEnd = null;\n\n    /**\n     * Processing options\n     */\n    this.keyboardDOM = keyboardDOM;\n\n    /**\n     * @type {object}\n     * @property {object} layout Modify the keyboard layout.\n     * @property {string} layoutName Specifies which layout should be used.\n     * @property {object} display Replaces variable buttons (such as {bksp}) with a human-friendly name (e.g.: “backspace”).\n     * @property {boolean} mergeDisplay By default, when you set the display property, you replace the default one. This setting merges them instead.\n     * @property {string} theme A prop to add your own css classes to the keyboard wrapper. You can add multiple classes separated by a space.\n     * @property {array} buttonTheme A prop to add your own css classes to one or several buttons.\n     * @property {array} buttonAttributes A prop to add your own attributes to one or several buttons.\n     * @property {boolean} debug Runs a console.log every time a key is pressed. Displays the buttons pressed and the current input.\n     * @property {boolean} newLineOnEnter Specifies whether clicking the “ENTER” button will input a newline (\\n) or not.\n     * @property {boolean} tabCharOnTab Specifies whether clicking the “TAB” button will input a tab character (\\t) or not.\n     * @property {string} inputName Allows you to use a single simple-keyboard instance for several inputs.\n     * @property {number} maxLength Restrains all of simple-keyboard inputs to a certain length. This should be used in addition to the input element’s maxlengthattribute.\n     * @property {object} maxLength Restrains simple-keyboard’s individual inputs to a certain length. This should be used in addition to the input element’s maxlengthattribute.\n     * @property {boolean} syncInstanceInputs When set to true, this option synchronizes the internal input of every simple-keyboard instance.\n     * @property {boolean} physicalKeyboardHighlight Enable highlighting of keys pressed on physical keyboard.\n     * @property {boolean} physicalKeyboardHighlightPress Presses keys highlighted by physicalKeyboardHighlight\n     * @property {string} physicalKeyboardHighlightTextColor Define the text color that the physical keyboard highlighted key should have.\n     * @property {string} physicalKeyboardHighlightBgColor Define the background color that the physical keyboard highlighted key should have.\n     * @property {boolean} preventMouseDownDefault Calling preventDefault for the mousedown events keeps the focus on the input.\n     * @property {boolean} preventMouseUpDefault Calling preventDefault for the mouseup events.\n     * @property {boolean} stopMouseDownPropagation Stops pointer down events on simple-keyboard buttons from bubbling to parent elements.\n     * @property {boolean} stopMouseUpPropagation Stops pointer up events on simple-keyboard buttons from bubbling to parent elements.\n     * @property {function(button: string):string} onKeyPress Executes the callback function on key press. Returns button layout name (i.e.: “{shift}”).\n     * @property {function(input: string):string} onChange Executes the callback function on input change. Returns the current input’s string.\n     * @property {function} onRender Executes the callback function every time simple-keyboard is rendered (e.g: when you change layouts).\n     * @property {function} onInit Executes the callback function once simple-keyboard is rendered for the first time (on initialization).\n     * @property {function(inputs: object):object} onChangeAll Executes the callback function on input change. Returns the input object with all defined inputs.\n     * @property {boolean} useButtonTag Render buttons as a button element instead of a div element.\n     * @property {boolean} disableCaretPositioning A prop to ensure characters are always be added/removed at the end of the string.\n     * @property {object} inputPattern Restrains input(s) change to the defined regular expression pattern.\n     * @property {boolean} useTouchEvents Instructs simple-keyboard to use touch events instead of click events.\n     * @property {boolean} autoUseTouchEvents Enable useTouchEvents automatically when touch device is detected.\n     * @property {boolean} useMouseEvents Opt out of PointerEvents handling, falling back to the prior mouse event logic.\n     * @property {function} destroy Clears keyboard listeners and DOM elements.\n     * @property {boolean} disableButtonHold Disable button hold action.\n     * @property {boolean} rtl Adds unicode right-to-left control characters to input return values.\n     * @property {function} onKeyReleased Executes the callback function on key release.\n     * @property {array} modules Module classes to be loaded by simple-keyboard.\n     */\n    this.options = options;\n    this.options.layoutName = this.options.layoutName || \"default\";\n    this.options.theme = this.options.theme || \"hg-theme-default\";\n    this.options.inputName = this.options.inputName || \"default\";\n    this.options.preventMouseDownDefault =\n      this.options.preventMouseDownDefault || false;\n\n    /**\n     * @type {object} Classes identifying loaded plugins\n     */\n    this.keyboardPluginClasses = \"\";\n\n    /**\n     * Bindings\n     */\n    Utilities.bindMethods(SimpleKeyboard, this);\n\n    /**\n     * simple-keyboard uses a non-persistent internal input to keep track of the entered string (the variable `keyboard.input`).\n     * This removes any dependency to input DOM elements. You can type and directly display the value in a div element, for example.\n     * @example\n     * // To get entered input\n     * const input = keyboard.getInput();\n     *\n     * // To clear entered input.\n     * keyboard.clearInput();\n     *\n     * @type {object}\n     * @property {object} default Default SimpleKeyboard internal input.\n     * @property {object} myInputName Example input that can be set through `options.inputName:\"myInputName\"`.\n     */\n    this.input = {};\n    this.input[this.options.inputName] = \"\";\n\n    /**\n     * @type {string} DOM class of the keyboard wrapper, normally \"simple-keyboard\" by default.\n     */\n    this.keyboardDOMClass = keyboardDOMClass;\n\n    /**\n     * @type {object} Contains the DOM elements of every rendered button, the key being the button's layout name (e.g.: \"{enter}\").\n     */\n    this.buttonElements = {};\n\n    /**\n     * Simple-keyboard Instances\n     * This enables multiple simple-keyboard support with easier management\n     */\n    if (!window[\"SimpleKeyboardInstances\"])\n      window[\"SimpleKeyboardInstances\"] = {};\n\n    this.currentInstanceName = this.utilities.camelCase(this.keyboardDOMClass);\n    window[\"SimpleKeyboardInstances\"][this.currentInstanceName] = this;\n\n    /**\n     * Instance vars\n     */\n    this.allKeyboardInstances = window[\"SimpleKeyboardInstances\"];\n    this.keyboardInstanceNames = Object.keys(window[\"SimpleKeyboardInstances\"]);\n    this.isFirstKeyboardInstance =\n      this.keyboardInstanceNames[0] === this.currentInstanceName;\n\n    /**\n     * Physical Keyboard support\n     */\n    this.physicalKeyboard = new PhysicalKeyboard({\n      dispatch: this.dispatch,\n      getOptions: this.getOptions\n    });\n\n    /**\n     * Rendering keyboard\n     */\n    if (this.keyboardDOM) this.render();\n    else {\n      console.warn(`\".${keyboardDOMClass}\" was not found in the DOM.`);\n      throw new Error(\"KEYBOARD_DOM_ERROR\");\n    }\n\n    /**\n     * Modules\n     */\n    this.modules = {};\n    this.loadModules();\n  }\n\n  /**\n   * parseParams\n   */\n  handleParams = params => {\n    let keyboardDOMClass;\n    let keyboardDOM;\n    let options;\n\n    /**\n     * If first parameter is a string:\n     * Consider it as an element's class\n     */\n    if (typeof params[0] === \"string\") {\n      keyboardDOMClass = params[0].split(\".\").join(\"\");\n      keyboardDOM = document.querySelector(`.${keyboardDOMClass}`);\n      options = params[1];\n\n      /**\n       * If first parameter is an HTMLDivElement\n       * Consider it as the keyboard DOM element\n       */\n    } else if (params[0] instanceof HTMLDivElement) {\n      /**\n       * This element must have a class, otherwise throw\n       */\n      if (!params[0].className) {\n        console.warn(\"Any DOM element passed as parameter must have a class.\");\n        throw new Error(\"KEYBOARD_DOM_CLASS_ERROR\");\n      }\n\n      keyboardDOMClass = params[0].className.split(\" \")[0];\n      keyboardDOM = params[0];\n      options = params[1];\n\n      /**\n       * Otherwise, search for .simple-keyboard DOM element\n       */\n    } else {\n      keyboardDOMClass = \"simple-keyboard\";\n      keyboardDOM = document.querySelector(`.${keyboardDOMClass}`);\n      options = params[0];\n    }\n\n    return {\n      keyboardDOMClass,\n      keyboardDOM,\n      options\n    };\n  };\n\n  /**\n   * Getters\n   */\n  getOptions = () => this.options;\n  getCaretPosition = () => this.caretPosition;\n  getCaretPositionEnd = () => this.caretPositionEnd;\n\n  /**\n   * Setters\n   */\n  setCaretPosition(position, endPosition) {\n    this.caretPosition = position;\n    this.caretPositionEnd = endPosition || position;\n  }\n\n  /**\n   * Handles clicks made to keyboard buttons\n   * @param  {string} button The button's layout name.\n   */\n  handleButtonClicked(button) {\n    const debug = this.options.debug;\n\n    /**\n     * Ignoring placeholder buttons\n     */\n    if (button === \"{//}\") return false;\n\n    /**\n     * Calling onKeyPress\n     */\n    if (typeof this.options.onKeyPress === \"function\")\n      this.options.onKeyPress(button);\n\n    if (!this.input[this.options.inputName])\n      this.input[this.options.inputName] = \"\";\n\n    const updatedInput = this.utilities.getUpdatedInput(\n      button,\n      this.input[this.options.inputName],\n      this.caretPosition,\n      this.caretPositionEnd\n    );\n\n    if (\n      // If input will change as a result of this button press\n      this.input[this.options.inputName] !== updatedInput &&\n      // This pertains to the \"inputPattern\" option:\n      // If inputPattern isn't set\n      (!this.options.inputPattern ||\n        // Or, if it is set and if the pattern is valid - we proceed.\n        (this.options.inputPattern && this.inputPatternIsValid(updatedInput)))\n    ) {\n      /**\n       * If maxLength and handleMaxLength yield true, halting\n       */\n      if (\n        this.options.maxLength &&\n        this.utilities.handleMaxLength(this.input, updatedInput)\n      ) {\n        return false;\n      }\n\n      this.input[this.options.inputName] = this.utilities.getUpdatedInput(\n        button,\n        this.input[this.options.inputName],\n        this.caretPosition,\n        this.caretPositionEnd,\n        true\n      );\n\n      if (debug) console.log(\"Input changed:\", this.getAllInputs());\n\n      if (this.options.debug) {\n        console.log(\n          \"Caret at: \",\n          this.getCaretPosition(),\n          this.getCaretPositionEnd(),\n          `(${this.keyboardDOMClass})`\n        );\n      }\n\n      /**\n       * Enforce syncInstanceInputs, if set\n       */\n      if (this.options.syncInstanceInputs) this.syncInstanceInputs();\n\n      /**\n       * Calling onChange\n       */\n      if (typeof this.options.onChange === \"function\")\n        this.options.onChange(this.getInput(this.options.inputName, true));\n\n      /**\n       * Calling onChangeAll\n       */\n      if (typeof this.options.onChangeAll === \"function\")\n        this.options.onChangeAll(this.getAllInputs());\n    }\n\n    if (debug) {\n      console.log(\"Key pressed:\", button);\n    }\n  }\n\n  /**\n   * Handles button mousedown\n   */\n  /* istanbul ignore next */\n  handleButtonMouseDown(button, e) {\n    if (e) {\n      /**\n       * Handle event options\n       */\n      if (this.options.preventMouseDownDefault) e.preventDefault();\n      if (this.options.stopMouseDownPropagation) e.stopPropagation();\n\n      /**\n       * Add active class\n       */\n      e.target.classList.add(this.activeButtonClass);\n    }\n\n    if (this.holdInteractionTimeout) clearTimeout(this.holdInteractionTimeout);\n    if (this.holdTimeout) clearTimeout(this.holdTimeout);\n\n    /**\n     * @type {boolean} Whether the mouse is being held onKeyPress\n     */\n    this.isMouseHold = true;\n\n    /**\n     * @type {object} Time to wait until a key hold is detected\n     */\n    if (!this.options.disableButtonHold) {\n      this.holdTimeout = setTimeout(() => {\n        if (\n          (this.isMouseHold &&\n            // TODO: This needs to be configurable through options\n            ((!button.includes(\"{\") && !button.includes(\"}\")) ||\n              button === \"{delete}\" ||\n              button === \"{backspace}\" ||\n              button === \"{bksp}\" ||\n              button === \"{space}\" ||\n              button === \"{tab}\")) ||\n          button === \"{arrowright}\" ||\n          button === \"{arrowleft}\" ||\n          button === \"{arrowup}\" ||\n          button === \"{arrowdown}\"\n        ) {\n          if (this.options.debug) console.log(\"Button held:\", button);\n\n          this.handleButtonHold(button, e);\n        }\n        clearTimeout(this.holdTimeout);\n      }, 500);\n    }\n  }\n\n  /**\n   * Handles button mouseup\n   */\n  handleButtonMouseUp(button = null, e = null) {\n    if (e) {\n      /**\n       * Handle event options\n       */\n      if (this.options.preventMouseUpDefault) e.preventDefault();\n      if (this.options.stopMouseUpPropagation) e.stopPropagation();\n    }\n\n    /**\n     * Remove active class\n     */\n    this.recurseButtons(buttonElement => {\n      buttonElement.classList.remove(this.activeButtonClass);\n    });\n\n    this.isMouseHold = false;\n    if (this.holdInteractionTimeout) clearTimeout(this.holdInteractionTimeout);\n\n    /**\n     * Calling onKeyReleased\n     */\n    if (button && typeof this.options.onKeyReleased === \"function\")\n      this.options.onKeyReleased(button);\n  }\n\n  /**\n   * Handles container mousedown\n   */\n  handleKeyboardContainerMouseDown(e) {\n    /**\n     * Handle event options\n     */\n    if (this.options.preventMouseDownDefault) e.preventDefault();\n  }\n\n  /**\n   * Handles button hold\n   */\n  /* istanbul ignore next */\n  handleButtonHold(button) {\n    if (this.holdInteractionTimeout) clearTimeout(this.holdInteractionTimeout);\n\n    /**\n     * @type {object} Timeout dictating the speed of key hold iterations\n     */\n    this.holdInteractionTimeout = setTimeout(() => {\n      if (this.isMouseHold) {\n        this.handleButtonClicked(button);\n        this.handleButtonHold(button);\n      } else {\n        clearTimeout(this.holdInteractionTimeout);\n      }\n    }, 100);\n  }\n\n  /**\n   * Send a command to all simple-keyboard instances (if you have several instances).\n   */\n  syncInstanceInputs() {\n    this.dispatch(instance => {\n      instance.replaceInput(this.input);\n      instance.setCaretPosition(this.caretPosition, this.caretPositionEnd);\n    });\n  }\n\n  /**\n   * Clear the keyboard’s input.\n   * @param {string} [inputName] optional - the internal input to select\n   */\n  clearInput(inputName) {\n    inputName = inputName || this.options.inputName;\n    this.input[inputName] = \"\";\n\n    /**\n     * Reset caretPosition\n     */\n    this.setCaretPosition(0);\n\n    /**\n     * Enforce syncInstanceInputs, if set\n     */\n    if (this.options.syncInstanceInputs) this.syncInstanceInputs();\n  }\n\n  /**\n   * Get the keyboard’s input (You can also get it from the onChange prop).\n   * @param  {string} [inputName] optional - the internal input to select\n   */\n  getInput(inputName, skipSync = false) {\n    inputName = inputName || this.options.inputName;\n\n    /**\n     * Enforce syncInstanceInputs, if set\n     */\n    if (this.options.syncInstanceInputs && !skipSync) this.syncInstanceInputs();\n\n    if (this.options.rtl) {\n      // Remove existing control chars\n      const inputWithoutRTLControl = this.input[inputName]\n        .replace(\"\\u202B\", \"\")\n        .replace(\"\\u202C\", \"\");\n\n      return \"\\u202B\" + inputWithoutRTLControl + \"\\u202C\";\n    } else {\n      return this.input[inputName];\n    }\n  }\n\n  /**\n   * Get all simple-keyboard inputs\n   */\n  getAllInputs() {\n    const output = {};\n    const inputNames = Object.keys(this.input);\n\n    inputNames.forEach(inputName => {\n      output[inputName] = this.getInput(inputName, true);\n    });\n\n    return output;\n  }\n\n  /**\n   * Set the keyboard’s input.\n   * @param  {string} input the input value\n   * @param  {string} inputName optional - the internal input to select\n   */\n  setInput(input, inputName) {\n    inputName = inputName || this.options.inputName;\n    this.input[inputName] = input;\n\n    /**\n     * Enforce syncInstanceInputs, if set\n     */\n    if (this.options.syncInstanceInputs) this.syncInstanceInputs();\n  }\n\n  /**\n   * Replace the input object (`keyboard.input`)\n   * @param  {object} inputObj The input object\n   */\n  replaceInput(inputObj) {\n    this.input = inputObj;\n  }\n\n  /**\n   * Set new option or modify existing ones after initialization.\n   * @param  {object} options The options to set\n   */\n  setOptions(options = {}) {\n    const changedOptions = this.changedOptions(options);\n    this.options = Object.assign(this.options, options);\n\n    if (changedOptions.length) {\n      if (this.options.debug) {\n        console.log(\"changedOptions\", changedOptions);\n      }\n\n      /**\n       * Some option changes require adjustments before re-render\n       */\n      this.onSetOptions(options);\n\n      /**\n       * Rendering\n       */\n      this.render();\n    }\n  }\n\n  /**\n   * Detecting changes to non-function options\n   * This allows us to ascertain whether a button re-render is needed\n   */\n  changedOptions(newOptions) {\n    return Object.keys(newOptions).filter(\n      optionName =>\n        JSON.stringify(newOptions[optionName]) !==\n        JSON.stringify(this.options[optionName])\n    );\n  }\n\n  /**\n   * Executing actions depending on changed options\n   * @param  {object} options The options to set\n   */\n  onSetOptions(options) {\n    if (options.inputName) {\n      /**\n       * inputName changed. This requires a caretPosition reset\n       */\n      if (this.options.debug) {\n        console.log(\"inputName changed. caretPosition reset.\");\n      }\n      this.setCaretPosition(null);\n    }\n  }\n\n  /**\n   * Remove all keyboard rows and reset keyboard values.\n   * Used internally between re-renders.\n   */\n  clear() {\n    this.keyboardDOM.innerHTML = \"\";\n    this.keyboardDOM.className = this.keyboardDOMClass;\n    this.buttonElements = {};\n  }\n\n  /**\n   * Send a command to all simple-keyboard instances at once (if you have multiple instances).\n   * @param  {function(instance: object, key: string)} callback Function to run on every instance\n   */\n  dispatch(callback) {\n    if (!window[\"SimpleKeyboardInstances\"]) {\n      console.warn(\n        `SimpleKeyboardInstances is not defined. Dispatch cannot be called.`\n      );\n      throw new Error(\"INSTANCES_VAR_ERROR\");\n    }\n\n    return Object.keys(window[\"SimpleKeyboardInstances\"]).forEach(key => {\n      callback(window[\"SimpleKeyboardInstances\"][key], key);\n    });\n  }\n\n  /**\n   * Adds/Modifies an entry to the `buttonTheme`. Basically a way to add a class to a button.\n   * @param  {string} buttons List of buttons to select (separated by a space).\n   * @param  {string} className Classes to give to the selected buttons (separated by space).\n   */\n  addButtonTheme(buttons, className) {\n    if (!className || !buttons) return false;\n\n    buttons.split(\" \").forEach(button => {\n      className.split(\" \").forEach(classNameItem => {\n        if (!this.options.buttonTheme) this.options.buttonTheme = [];\n\n        let classNameFound = false;\n\n        /**\n         * If class is already defined, we add button to class definition\n         */\n        this.options.buttonTheme.map(buttonTheme => {\n          if (buttonTheme.class.split(\" \").includes(classNameItem)) {\n            classNameFound = true;\n\n            const buttonThemeArray = buttonTheme.buttons.split(\" \");\n            if (!buttonThemeArray.includes(button)) {\n              classNameFound = true;\n              buttonThemeArray.push(button);\n              buttonTheme.buttons = buttonThemeArray.join(\" \");\n            }\n          }\n          return buttonTheme;\n        });\n\n        /**\n         * If class is not defined, we create a new entry\n         */\n        if (!classNameFound) {\n          this.options.buttonTheme.push({\n            class: classNameItem,\n            buttons: buttons\n          });\n        }\n      });\n    });\n\n    this.render();\n  }\n\n  /**\n   * Removes/Amends an entry to the `buttonTheme`. Basically a way to remove a class previously added to a button through buttonTheme or addButtonTheme.\n   * @param  {string} buttons List of buttons to select (separated by a space).\n   * @param  {string} className Classes to give to the selected buttons (separated by space).\n   */\n  removeButtonTheme(buttons, className) {\n    /**\n     * When called with empty parameters, remove all button themes\n     */\n    if (!buttons && !className) {\n      this.options.buttonTheme = [];\n      this.render();\n      return false;\n    }\n\n    /**\n     * If buttons are passed and buttonTheme has items\n     */\n    if (\n      buttons &&\n      Array.isArray(this.options.buttonTheme) &&\n      this.options.buttonTheme.length\n    ) {\n      const buttonArray = buttons.split(\" \");\n      buttonArray.forEach(button => {\n        this.options.buttonTheme.map((buttonTheme, index) => {\n          /**\n           * If className is set, we affect the buttons only for that class\n           * Otherwise, we afect all classes\n           */\n          if (\n            (className && className.includes(buttonTheme.class)) ||\n            !className\n          ) {\n            const filteredButtonArray = buttonTheme.buttons\n              .split(\" \")\n              .filter(item => item !== button);\n\n            /**\n             * If buttons left, return them, otherwise, remove button Theme\n             */\n            if (filteredButtonArray.length) {\n              buttonTheme.buttons = filteredButtonArray.join(\" \");\n            } else {\n              this.options.buttonTheme.splice(index, 1);\n              buttonTheme = null;\n            }\n          }\n\n          return buttonTheme;\n        });\n      });\n\n      this.render();\n    }\n  }\n\n  /**\n   * Get the DOM Element of a button. If there are several buttons with the same name, an array of the DOM Elements is returned.\n   * @param  {string} button The button layout name to select\n   */\n  getButtonElement(button) {\n    let output;\n\n    const buttonArr = this.buttonElements[button];\n    if (buttonArr) {\n      if (buttonArr.length > 1) {\n        output = buttonArr;\n      } else {\n        output = buttonArr[0];\n      }\n    }\n\n    return output;\n  }\n\n  /**\n   * This handles the \"inputPattern\" option\n   * by checking if the provided inputPattern passes\n   */\n  inputPatternIsValid(inputVal) {\n    const inputPatternRaw = this.options.inputPattern;\n    let inputPattern;\n\n    /**\n     * Check if input pattern is global or targeted to individual inputs\n     */\n    if (inputPatternRaw instanceof RegExp) {\n      inputPattern = inputPatternRaw;\n    } else {\n      inputPattern = inputPatternRaw[this.options.inputName];\n    }\n\n    if (inputPattern && inputVal) {\n      const didInputMatch = inputPattern.test(inputVal);\n\n      if (this.options.debug) {\n        console.log(\n          `inputPattern (\"${inputPattern}\"): ${\n            didInputMatch ? \"passed\" : \"did not pass!\"\n          }`\n        );\n      }\n\n      return didInputMatch;\n    } else {\n      /**\n       * inputPattern doesn't seem to be set for the current input, or input is empty. Pass.\n       */\n      return true;\n    }\n  }\n\n  /**\n   * Handles simple-keyboard event listeners\n   */\n  setEventListeners() {\n    /**\n     * Only first instance should set the event listeners\n     */\n    if (this.isFirstKeyboardInstance || !this.allKeyboardInstances) {\n      if (this.options.debug) {\n        console.log(`Caret handling started (${this.keyboardDOMClass})`);\n      }\n\n      /**\n       * Event Listeners\n       */\n      document.addEventListener(\"keyup\", this.handleKeyUp);\n      document.addEventListener(\"keydown\", this.handleKeyDown);\n      document.addEventListener(\"mouseup\", this.handleMouseUp);\n      document.addEventListener(\"touchend\", this.handleTouchEnd);\n    }\n  }\n\n  /**\n   * Event Handler: KeyUp\n   */\n  handleKeyUp(event) {\n    this.caretEventHandler(event);\n\n    if (this.options.physicalKeyboardHighlight) {\n      this.physicalKeyboard.handleHighlightKeyUp(event);\n    }\n  }\n\n  /**\n   * Event Handler: KeyDown\n   */\n  handleKeyDown(event) {\n    if (this.options.physicalKeyboardHighlight) {\n      this.physicalKeyboard.handleHighlightKeyDown(event);\n    }\n  }\n\n  /**\n   * Event Handler: MouseUp\n   */\n  handleMouseUp(event) {\n    this.caretEventHandler(event);\n  }\n\n  /**\n   * Event Handler: TouchEnd\n   */\n  /* istanbul ignore next */\n  handleTouchEnd(event) {\n    this.caretEventHandler(event);\n  }\n\n  /**\n   * Called by {@link setEventListeners} when an event that warrants a cursor position update is triggered\n   */\n  caretEventHandler(event) {\n    let targetTagName;\n    if (event.target.tagName) {\n      targetTagName = event.target.tagName.toLowerCase();\n    }\n\n    this.dispatch(instance => {\n      const isKeyboard =\n        event.target === instance.keyboardDOM ||\n        (event.target && instance.keyboardDOM.contains(event.target));\n\n      if (instance.isMouseHold) {\n        instance.isMouseHold = false;\n      }\n\n      if (\n        (targetTagName === \"textarea\" || targetTagName === \"input\") &&\n        !instance.options.disableCaretPositioning\n      ) {\n        /**\n         * Tracks current cursor position\n         * As keys are pressed, text will be added/removed at that position within the input.\n         */\n        instance.setCaretPosition(\n          event.target.selectionStart,\n          event.target.selectionEnd\n        );\n\n        if (instance.options.debug) {\n          console.log(\n            \"Caret at: \",\n            instance.getCaretPosition(),\n            instance.getCaretPositionEnd(),\n            event && event.target.tagName.toLowerCase(),\n            `(${instance.keyboardDOMClass})`\n          );\n        }\n      } else if (instance.options.disableCaretPositioning || !isKeyboard) {\n        /**\n         * If we toggled off disableCaretPositioning, we must ensure caretPosition doesn't persist once reactivated.\n         */\n        instance.setCaretPosition(null);\n      }\n    });\n  }\n\n  /**\n   * Execute an operation on each button\n   */\n  recurseButtons(fn) {\n    if (!fn) return;\n\n    Object.keys(this.buttonElements).forEach(buttonName =>\n      this.buttonElements[buttonName].forEach(fn)\n    );\n  }\n\n  /**\n   * Destroy keyboard listeners and DOM elements\n   */\n  destroy() {\n    if (this.options.debug)\n      console.log(\n        `Destroying simple-keyboard instance: ${this.currentInstanceName}`\n      );\n\n    /**\n     * Remove document listeners\n     */\n    document.removeEventListener(\"keyup\", this.handleKeyUp);\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\n    document.removeEventListener(\"mouseup\", this.handleMouseUp);\n    document.removeEventListener(\"touchend\", this.handleTouchEnd);\n    document.onpointerup = null;\n    document.ontouchend = null;\n    document.ontouchcancel = null;\n    document.onmouseup = null;\n\n    /**\n     * Remove buttons\n     */\n    let deleteButton = buttonElement => {\n      buttonElement.onpointerdown = null;\n      buttonElement.onpointerup = null;\n      buttonElement.onpointercancel = null;\n      buttonElement.ontouchstart = null;\n      buttonElement.ontouchend = null;\n      buttonElement.ontouchcancel = null;\n      buttonElement.onclick = null;\n      buttonElement.onmousedown = null;\n      buttonElement.onmouseup = null;\n\n      buttonElement.remove();\n      buttonElement = null;\n    };\n\n    this.recurseButtons(deleteButton);\n\n    this.recurseButtons = null;\n    deleteButton = null;\n\n    /**\n     * Remove wrapper events\n     */\n    this.keyboardDOM.onpointerdown = null;\n    this.keyboardDOM.ontouchstart = null;\n    this.keyboardDOM.onmousedown = null;\n\n    /**\n     * Clearing keyboard wrapper\n     */\n    this.clear();\n\n    /**\n     * Remove instance\n     */\n    window[\"SimpleKeyboardInstances\"][this.currentInstanceName] = null;\n    delete window[\"SimpleKeyboardInstances\"][this.currentInstanceName];\n\n    /**\n     * Reset initialized flag\n     */\n    this.initialized = false;\n  }\n\n  /**\n   * Process buttonTheme option\n   */\n  getButtonThemeClasses(button) {\n    const buttonTheme = this.options.buttonTheme;\n    let buttonClasses = [];\n\n    if (Array.isArray(buttonTheme)) {\n      buttonTheme.forEach(themeObj => {\n        if (\n          themeObj.class &&\n          typeof themeObj.class === \"string\" &&\n          themeObj.buttons &&\n          typeof themeObj.buttons === \"string\"\n        ) {\n          const themeObjClasses = themeObj.class.split(\" \");\n          const themeObjButtons = themeObj.buttons.split(\" \");\n\n          if (themeObjButtons.includes(button)) {\n            buttonClasses = [...buttonClasses, ...themeObjClasses];\n          }\n        } else {\n          console.warn(\n            `Incorrect \"buttonTheme\". Please check the documentation.`,\n            themeObj\n          );\n        }\n      });\n    }\n\n    return buttonClasses;\n  }\n\n  /**\n   * Process buttonAttributes option\n   */\n  setDOMButtonAttributes(button, callback) {\n    const buttonAttributes = this.options.buttonAttributes;\n\n    if (Array.isArray(buttonAttributes)) {\n      buttonAttributes.forEach(attrObj => {\n        if (\n          attrObj.attribute &&\n          typeof attrObj.attribute === \"string\" &&\n          attrObj.value &&\n          typeof attrObj.value === \"string\" &&\n          attrObj.buttons &&\n          typeof attrObj.buttons === \"string\"\n        ) {\n          const attrObjButtons = attrObj.buttons.split(\" \");\n\n          if (attrObjButtons.includes(button)) {\n            callback(attrObj.attribute, attrObj.value);\n          }\n        } else {\n          console.warn(\n            `Incorrect \"buttonAttributes\". Please check the documentation.`,\n            attrObj\n          );\n        }\n      });\n    }\n  }\n\n  onTouchDeviceDetected() {\n    /**\n     * Processing autoTouchEvents\n     */\n    this.processAutoTouchEvents();\n\n    /**\n     * Disabling contextual window on touch devices\n     */\n    this.disableContextualWindow();\n  }\n\n  /**\n   * Disabling contextual window for hg-button\n   */\n  /* istanbul ignore next */\n  disableContextualWindow() {\n    window.oncontextmenu = event => {\n      if (event.target.classList.contains(\"hg-button\")) {\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n      }\n    };\n  }\n\n  /**\n   * Process autoTouchEvents option\n   */\n  processAutoTouchEvents() {\n    if (this.options.autoUseTouchEvents) {\n      this.options.useTouchEvents = true;\n\n      if (this.options.debug) {\n        console.log(\n          `autoUseTouchEvents: Touch device detected, useTouchEvents enabled.`\n        );\n      }\n    }\n  }\n\n  /**\n   * Executes the callback function once simple-keyboard is rendered for the first time (on initialization).\n   */\n  onInit() {\n    if (this.options.debug) {\n      console.log(`${this.keyboardDOMClass} Initialized`);\n    }\n\n    /**\n     * setEventListeners\n     */\n    this.setEventListeners();\n\n    if (typeof this.options.onInit === \"function\") this.options.onInit();\n  }\n\n  /**\n   * Executes the callback function before a simple-keyboard render.\n   */\n  beforeFirstRender() {\n    /**\n     * Performing actions when touch device detected\n     */\n    if (this.utilities.isTouchDevice()) {\n      this.onTouchDeviceDetected();\n    }\n\n    if (typeof this.options.beforeFirstRender === \"function\")\n      this.options.beforeFirstRender();\n\n    /**\n     * Notify about PointerEvents usage\n     */\n    if (\n      this.isFirstKeyboardInstance &&\n      this.utilities.pointerEventsSupported() &&\n      !this.options.useTouchEvents &&\n      !this.options.useMouseEvents\n    ) {\n      if (this.options.debug) {\n        console.log(\"Using PointerEvents as it is supported by this browser\");\n      }\n    }\n\n    /**\n     * Notify about touch events usage\n     */\n    if (this.options.useTouchEvents) {\n      if (this.options.debug) {\n        console.log(\n          \"useTouchEvents has been enabled. Only touch events will be used.\"\n        );\n      }\n    }\n  }\n\n  /**\n   * Executes the callback function before a simple-keyboard render.\n   */\n  beforeRender() {\n    if (typeof this.options.beforeRender === \"function\")\n      this.options.beforeRender();\n  }\n\n  /**\n   * Executes the callback function every time simple-keyboard is rendered (e.g: when you change layouts).\n   */\n  onRender() {\n    if (typeof this.options.onRender === \"function\") this.options.onRender();\n  }\n\n  /**\n   * Executes the callback function once all modules have been loaded\n   */\n  onModulesLoaded() {\n    if (typeof this.options.onModulesLoaded === \"function\")\n      this.options.onModulesLoaded(this);\n  }\n\n  /**\n   * Register module\n   */\n  registerModule = (name, initCallback) => {\n    if (!this.modules[name]) this.modules[name] = {};\n\n    initCallback(this.modules[name]);\n  };\n\n  /**\n   * Load modules\n   */\n  loadModules() {\n    if (Array.isArray(this.options.modules)) {\n      this.options.modules.forEach(KeyboardModule => {\n        const keyboardModule = new KeyboardModule();\n        keyboardModule.init(this);\n      });\n\n      this.keyboardPluginClasses = \"modules-loaded\";\n\n      this.render();\n      this.onModulesLoaded();\n    }\n  }\n\n  /**\n   * Get module prop\n   */\n  getModuleProp(name, prop) {\n    if (!this.modules[name]) return false;\n\n    return this.modules[name][prop];\n  }\n\n  /**\n   * getModulesList\n   */\n  getModulesList() {\n    return Object.keys(this.modules);\n  }\n\n  /**\n   * Parse Row DOM containers\n   */\n  parseRowDOMContainers(\n    rowDOM,\n    rowIndex,\n    containerStartIndexes,\n    containerEndIndexes\n  ) {\n    const rowDOMArray = Array.from(rowDOM.children);\n    let removedElements = 0;\n\n    if (rowDOMArray.length) {\n      containerStartIndexes.forEach((startIndex, arrIndex) => {\n        const endIndex = containerEndIndexes[arrIndex];\n\n        /**\n         * If there exists a respective end index\n         * if end index comes after start index\n         */\n        if (!endIndex || !(endIndex > startIndex)) {\n          return false;\n        }\n\n        /**\n         * Updated startIndex, endIndex\n         * This is since the removal of buttons to place a single button container\n         * results in a modified array size\n         */\n        const updated_startIndex = startIndex - removedElements;\n        const updated_endIndex = endIndex - removedElements;\n\n        /**\n         * Create button container\n         */\n        const containerDOM = document.createElement(\"div\");\n        containerDOM.className += \"hg-button-container\";\n        const containerUID = `${this.options.layoutName}-r${rowIndex}c${arrIndex}`;\n        containerDOM.setAttribute(\"data-skUID\", containerUID);\n\n        /**\n         * Taking elements due to be inserted into container\n         */\n        const containedElements = rowDOMArray.splice(\n          updated_startIndex,\n          updated_endIndex - updated_startIndex + 1\n        );\n        removedElements = updated_endIndex - updated_startIndex;\n\n        /**\n         * Inserting elements to container\n         */\n        containedElements.forEach(element => containerDOM.appendChild(element));\n\n        /**\n         * Adding container at correct position within rowDOMArray\n         */\n        rowDOMArray.splice(updated_startIndex, 0, containerDOM);\n\n        /**\n         * Clearing old rowDOM children structure\n         */\n        rowDOM.innerHTML = \"\";\n\n        /**\n         * Appending rowDOM new children list\n         */\n        rowDOMArray.forEach(element => rowDOM.appendChild(element));\n\n        if (this.options.debug) {\n          console.log(\n            \"rowDOMContainer\",\n            containedElements,\n            updated_startIndex,\n            updated_endIndex,\n            removedElements + 1\n          );\n        }\n      });\n    }\n\n    return rowDOM;\n  }\n\n  /**\n   * getKeyboardClassString\n   */\n  getKeyboardClassString = (...baseDOMClasses) => {\n    const keyboardClasses = [this.keyboardDOMClass, ...baseDOMClasses].filter(\n      DOMClass => !!DOMClass\n    );\n\n    return keyboardClasses.join(\" \");\n  };\n\n  /**\n   * Renders rows and buttons as per options\n   */\n  render() {\n    /**\n     * Clear keyboard\n     */\n    this.clear();\n\n    /**\n     * Calling beforeFirstRender\n     */\n    if (!this.initialized) {\n      this.beforeFirstRender();\n    }\n\n    /**\n     * Calling beforeRender\n     */\n    this.beforeRender();\n\n    const layoutClass = `hg-layout-${this.options.layoutName}`;\n    const layout = this.options.layout || getDefaultLayout();\n    const useTouchEvents = this.options.useTouchEvents || false;\n    const useTouchEventsClass = useTouchEvents ? \"hg-touch-events\" : \"\";\n    const useMouseEvents = this.options.useMouseEvents || false;\n    const disableRowButtonContainers = this.options.disableRowButtonContainers;\n\n    /**\n     * Adding themeClass, layoutClass to keyboardDOM\n     */\n    this.keyboardDOM.className = this.getKeyboardClassString(\n      this.options.theme,\n      layoutClass,\n      this.keyboardPluginClasses,\n      useTouchEventsClass\n    );\n\n    /**\n     * Iterating through each row\n     */\n    layout[this.options.layoutName].forEach((row, rIndex) => {\n      const rowArray = row.split(\" \");\n\n      /**\n       * Creating empty row\n       */\n      let rowDOM = document.createElement(\"div\");\n      rowDOM.className += \"hg-row\";\n\n      /**\n       * Tracking container indicators in rows\n       */\n      const containerStartIndexes = [];\n      const containerEndIndexes = [];\n\n      /**\n       * Iterating through each button in row\n       */\n      rowArray.forEach((button, bIndex) => {\n        /**\n         * Check if button has a container indicator\n         */\n        const buttonHasContainerStart =\n          !disableRowButtonContainers &&\n          typeof button === \"string\" &&\n          button.length > 1 &&\n          button.indexOf(\"[\") === 0;\n\n        const buttonHasContainerEnd =\n          !disableRowButtonContainers &&\n          typeof button === \"string\" &&\n          button.length > 1 &&\n          button.indexOf(\"]\") === button.length - 1;\n\n        /**\n         * Save container start index, if applicable\n         */\n        if (buttonHasContainerStart) {\n          containerStartIndexes.push(bIndex);\n\n          /**\n           * Removing indicator\n           */\n          button = button.replace(/\\[/g, \"\");\n        }\n\n        if (buttonHasContainerEnd) {\n          containerEndIndexes.push(bIndex);\n\n          /**\n           * Removing indicator\n           */\n          button = button.replace(/\\]/g, \"\");\n        }\n\n        /**\n         * Processing button options\n         */\n        const fctBtnClass = this.utilities.getButtonClass(button);\n        const buttonDisplayName = this.utilities.getButtonDisplayName(\n          button,\n          this.options.display,\n          this.options.mergeDisplay\n        );\n\n        /**\n         * Creating button\n         */\n        const buttonType = this.options.useButtonTag ? \"button\" : \"div\";\n        const buttonDOM = document.createElement(buttonType);\n        buttonDOM.className += `hg-button ${fctBtnClass}`;\n\n        /**\n         * Adding buttonTheme\n         */\n        buttonDOM.classList.add(...this.getButtonThemeClasses(button));\n\n        /**\n         * Adding buttonAttributes\n         */\n        this.setDOMButtonAttributes(button, (attribute, value) => {\n          buttonDOM.setAttribute(attribute, value);\n        });\n\n        this.activeButtonClass = \"hg-activeButton\";\n\n        /**\n         * Handle button click event\n         */\n        /* istanbul ignore next */\n        if (\n          this.utilities.pointerEventsSupported() &&\n          !useTouchEvents &&\n          !useMouseEvents\n        ) {\n          /**\n           * Handle PointerEvents\n           */\n          buttonDOM.onpointerdown = e => {\n            this.handleButtonClicked(button);\n            this.handleButtonMouseDown(button, e);\n          };\n          buttonDOM.onpointerup = e => {\n            this.handleButtonMouseUp(button, e);\n          };\n          buttonDOM.onpointercancel = e => {\n            this.handleButtonMouseUp(button, e);\n          };\n        } else {\n          /**\n           * Fallback for browsers not supporting PointerEvents\n           */\n          if (useTouchEvents) {\n            /**\n             * Handle touch events\n             */\n            buttonDOM.ontouchstart = e => {\n              this.handleButtonClicked(button);\n              this.handleButtonMouseDown(button, e);\n            };\n            buttonDOM.ontouchend = e => {\n              this.handleButtonMouseUp(button, e);\n            };\n            buttonDOM.ontouchcancel = e => {\n              this.handleButtonMouseUp(button, e);\n            };\n          } else {\n            /**\n             * Handle mouse events\n             */\n            buttonDOM.onclick = () => {\n              this.isMouseHold = false;\n              this.handleButtonClicked(button);\n            };\n            buttonDOM.onmousedown = e => {\n              this.handleButtonMouseDown(button, e);\n            };\n            buttonDOM.onmouseup = e => {\n              this.handleButtonMouseUp(button, e);\n            };\n          }\n        }\n\n        /**\n         * Adding identifier\n         */\n        buttonDOM.setAttribute(\"data-skBtn\", button);\n\n        /**\n         * Adding unique id\n         * Since there's no limit on spawning same buttons, the unique id ensures you can style every button\n         */\n        const buttonUID = `${this.options.layoutName}-r${rIndex}b${bIndex}`;\n        buttonDOM.setAttribute(\"data-skBtnUID\", buttonUID);\n\n        /**\n         * Adding button label to button\n         */\n        const buttonSpanDOM = document.createElement(\"span\");\n        buttonSpanDOM.innerHTML = buttonDisplayName;\n        buttonDOM.appendChild(buttonSpanDOM);\n\n        /**\n         * Adding to buttonElements\n         */\n        if (!this.buttonElements[button]) this.buttonElements[button] = [];\n\n        this.buttonElements[button].push(buttonDOM);\n\n        /**\n         * Appending button to row\n         */\n        rowDOM.appendChild(buttonDOM);\n      });\n\n      /**\n       * Parse containers in row\n       */\n      rowDOM = this.parseRowDOMContainers(\n        rowDOM,\n        rIndex,\n        containerStartIndexes,\n        containerEndIndexes\n      );\n\n      /**\n       * Appending row to keyboard\n       */\n      this.keyboardDOM.appendChild(rowDOM);\n    });\n\n    /**\n     * Calling onRender\n     */\n    this.onRender();\n\n    if (!this.initialized) {\n      /**\n       * Ensures that onInit and beforeFirstRender are only called once per instantiation\n       */\n      this.initialized = true;\n\n      /**\n       * Handling parent events\n       */\n      /* istanbul ignore next */\n      if (\n        this.utilities.pointerEventsSupported() &&\n        !useTouchEvents &&\n        !useMouseEvents\n      ) {\n        document.onpointerup = () => this.handleButtonMouseUp();\n        this.keyboardDOM.onpointerdown = e =>\n          this.handleKeyboardContainerMouseDown(e);\n      } else if (useTouchEvents) {\n        /**\n         * Handling ontouchend, ontouchcancel\n         */\n        document.ontouchend = () => this.handleButtonMouseUp();\n        document.ontouchcancel = () => this.handleButtonMouseUp();\n\n        this.keyboardDOM.ontouchstart = e =>\n          this.handleKeyboardContainerMouseDown(e);\n      } else if (!useTouchEvents) {\n        /**\n         * Handling mouseup\n         */\n        document.onmouseup = () => this.handleButtonMouseUp();\n        this.keyboardDOM.onmousedown = e =>\n          this.handleKeyboardContainerMouseDown(e);\n      }\n\n      /**\n       * Calling onInit\n       */\n      this.onInit();\n    }\n  }\n}\n\nexport default SimpleKeyboard;\n","export const getDefaultLayout = () => {\n  return {\n    default: [\n      \"` 1 2 3 4 5 6 7 8 9 0 - = {bksp}\",\n      \"{tab} q w e r t y u i o p [ ] \\\\\",\n      \"{lock} a s d f g h j k l ; ' {enter}\",\n      \"{shift} z x c v b n m , . / {shift}\",\n      \".com @ {space}\"\n    ],\n    shift: [\n      \"~ ! @ # $ % ^ & * ( ) _ + {bksp}\",\n      \"{tab} Q W E R T Y U I O P { } |\",\n      '{lock} A S D F G H J K L : \" {enter}',\n      \"{shift} Z X C V B N M < > ? {shift}\",\n      \".com @ {space}\"\n    ]\n  };\n};\n","import SimpleKeyboard from \"./components/Keyboard\";\nexport default SimpleKeyboard;\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}