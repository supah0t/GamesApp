{"ast":null,"code":"import axios from 'axios';\nimport * as actionTypes from './actionTypes';\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = (token, username) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token,\n    user: username\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('expirationDate');\n  localStorage.removeItem('user');\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\n\nconst checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\n\nexport const authLogin = (username, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.post('http://127.0.0.1:8000/rest-auth/login/', {\n      username: username,\n      password: password\n    }).then(res => {\n      const token = res.data.key;\n      const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem('token', token);\n      localStorage.setItem('expirationDate', expirationDate);\n      localStorage.setItem('user', username);\n      dispatch(authSuccess(token, username));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const authSignup = (username, email, password1, password2) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.post('http://127.0.0.1:8000/rest-auth/registration/', {\n      username: username,\n      email: email,\n      password1: password1,\n      password2: password2\n    }).then(res => {\n      const token = res.data.key;\n      const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem('token', token);\n      localStorage.setItem('expirationDate', expirationDate);\n      dispatch(authSuccess(token, username));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n    const username = localStorage.getItem('user');\n\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem('expirationDate'));\n\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(token, username));\n        dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n      }\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/Ody/Desktop/prog/cs50web/finalapp/cleanfinal/frontend/typing/src/store/actions/auth.js"],"names":["axios","actionTypes","authStart","type","AUTH_START","authSuccess","token","username","AUTH_SUCCESS","user","authFail","error","AUTH_FAIL","logout","localStorage","removeItem","AUTH_LOGOUT","checkAuthTimeout","expirationTime","dispatch","setTimeout","authLogin","password","post","then","res","data","key","expirationDate","Date","getTime","setItem","catch","err","authSignup","email","password1","password2","authCheckState","getItem","undefined"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport * as actionTypes from './actionTypes';\r\n\r\nexport const authStart = () => {\r\n  return {\r\n    type: actionTypes.AUTH_START\r\n  }\r\n}\r\n\r\nexport const authSuccess = (token, username) => {\r\n  return {\r\n    type: actionTypes.AUTH_SUCCESS,\r\n    token: token,\r\n    user: username\r\n  }\r\n}\r\n\r\nexport const authFail = error => {\r\n  return {\r\n    type: actionTypes.AUTH_FAIL,\r\n    error: error\r\n  }\r\n}\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem('token');\r\n  localStorage.removeItem('expirationDate');\r\n  localStorage.removeItem('user')\r\n  return {\r\n    type: actionTypes.AUTH_LOGOUT\r\n  }\r\n}\r\n\r\nconst checkAuthTimeout = expirationTime => {\r\n  return dispatch => {\r\n    setTimeout(() => {\r\n      dispatch(logout());\r\n    }, expirationTime * 1000)\r\n  }\r\n}\r\n\r\nexport const authLogin = (username, password) => {\r\n  return dispatch => {\r\n    dispatch(authStart());\r\n    axios.post('http://127.0.0.1:8000/rest-auth/login/', {\r\n      username: username,\r\n      password: password\r\n    })\r\n    .then(res => {\r\n      const token = res.data.key;\r\n      const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('expirationDate', expirationDate);\r\n      localStorage.setItem('user', username);\r\n      dispatch(authSuccess(token, username));\r\n      dispatch(checkAuthTimeout(3600));\r\n    })\r\n    .catch(err => {\r\n      dispatch(authFail(err));\r\n    })\r\n  }\r\n}\r\n\r\nexport const authSignup = (username, email, password1, password2) => {\r\n  return dispatch => {\r\n    dispatch(authStart());\r\n    axios.post('http://127.0.0.1:8000/rest-auth/registration/', {\r\n      username: username,\r\n      email: email,\r\n      password1: password1,\r\n      password2: password2\r\n    })\r\n      .then(res => {\r\n        const token = res.data.key;\r\n        const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('expirationDate', expirationDate);\r\n        dispatch(authSuccess(token, username));\r\n        dispatch(checkAuthTimeout(3600));\r\n      })\r\n      .catch(err => {\r\n        dispatch(authFail(err));\r\n      })\r\n  }\r\n}\r\n\r\nexport const authCheckState = () => {\r\n  return dispatch => {\r\n    const token = localStorage.getItem('token');\r\n    const username = localStorage.getItem('user');\r\n    if (token === undefined) {\r\n      dispatch(logout());\r\n    } else {\r\n      const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n      if (expirationDate <= new Date() ) {\r\n        dispatch(logout());\r\n      } else {\r\n        dispatch(authSuccess(token, username));\r\n        dispatch(checkAuthTimeout( (expirationDate.getTime() - new Date().getTime()) / 1000 ) );\r\n      }\r\n    }\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}