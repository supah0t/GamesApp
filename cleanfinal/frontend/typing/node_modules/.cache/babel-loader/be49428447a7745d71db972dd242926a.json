{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ody\\\\Desktop\\\\prog\\\\cs50web\\\\finalapp\\\\cleanfinal\\\\frontend\\\\typing\\\\src\\\\containers\\\\Login.js\";\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport * as actions from '../store/actions/auth';\n\nclass LoginForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      const username = event.target.elements.username.value;\n      const password = event.target.elements.password.value;\n\n      if (username !== null && password !== null) {\n        this.props.onAuth(username, password);\n      }\n    };\n  }\n\n  render() {\n    let errorMessage = null;\n\n    if (this.props.error) {\n      errorMessage = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.props.error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [errorMessage, this.props.loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        variant: \"info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: event => this.handleFormSubmit(event),\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            name: \"username\",\n            type: \"username\",\n            placeholder: \"Enter Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            name: \"password\",\n            type: \"password\",\n            placeholder: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), \"\\xA0 Or \\xA0\", /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/signup\",\n          children: \"signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, password) => dispatch(action.authLogin)\n  };\n};\n\nexport default connect(mapStateToProps)(LoginForm);","map":{"version":3,"sources":["C:/Users/Ody/Desktop/prog/cs50web/finalapp/cleanfinal/frontend/typing/src/containers/Login.js"],"names":["React","Form","Button","Spinner","connect","NavLink","actions","LoginForm","Component","handleFormSubmit","event","preventDefault","username","target","elements","value","password","props","onAuth","render","errorMessage","error","message","loading","mapStateToProps","state","mapDispatchToProps","dispatch","action","authLogin"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport {connect} from 'react-redux';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nimport * as actions from '../store/actions/auth';\r\n\r\nclass LoginForm extends React.Component {\r\n  \r\n  handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    const username = event.target.elements.username.value;\r\n    const password = event.target.elements.password.value;\r\n   \r\n    if(username !== null && password !== null) {\r\n      this.props.onAuth(username, password);\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    \r\n    let errorMessage = null;\r\n    if (this.props.error) {\r\n      errorMessage = (\r\n        <p>{this.props.error.message}</p>\r\n      );\r\n    }\r\n    \r\n    return (\r\n      <div>\r\n        {errorMessage}\r\n        {\r\n          this.props.loading ?\r\n            <Spinner animation=\"border\" variant=\"info\" />\r\n          :\r\n          <Form onSubmit={(event) => this.handleFormSubmit(event)}>\r\n            \r\n            <Form.Group>\r\n              <Form.Label>Username</Form.Label>\r\n              <Form.Control name=\"username\" type=\"username\" placeholder=\"Enter Username\" />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control name=\"password\" type=\"password\" placeholder=\"Password\" />\r\n            </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Login\r\n            </Button>\r\n            &nbsp; Or &nbsp;\r\n            <NavLink to=\"/signup\">signup</NavLink>\r\n            \r\n          </Form>\r\n        \r\n        }\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.loading,\r\n    error: state.error\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAuth: (username, password) => dispatch(action.authLogin)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LoginForm);"]},"metadata":{},"sourceType":"module"}