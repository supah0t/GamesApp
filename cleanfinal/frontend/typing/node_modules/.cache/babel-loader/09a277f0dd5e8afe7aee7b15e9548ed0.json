{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ody\\\\Desktop\\\\prog\\\\cs50web\\\\finalapp\\\\cleanfinal\\\\frontend\\\\typing\\\\src\\\\components\\\\GameComplete.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\n\nclass Score extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.CalculateWPM = props => {\n      const totalTime = props.endTime / (1000 * 60);\n      const words = props.wordCount / 5;\n      return (Math.round(words / totalTime * 100) / 100).toFixed(2);\n    };\n\n    this.testFunct = () => {\n      return axios.post('http://127.0.0.1:8000/api/', {\n        score: this.CalculateWPM(this.props),\n        user: this.props.user\n      }).then(res => console.log(res));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"end-game-text\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Congratulations! You completed the test.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your WPM is\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: this.CalculateWPM(this.props)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gap-20\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gap-20\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), !this.props.isAuthenticated ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Login in if you want to post your results to the leaderboards!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Post your results to the leaderboards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.testFunct,\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.token !== null,\n    user: state.user\n  };\n};\n\nexport default connect(mapStateToProps)(Score);","map":{"version":3,"sources":["C:/Users/Ody/Desktop/prog/cs50web/finalapp/cleanfinal/frontend/typing/src/components/GameComplete.js"],"names":["React","axios","Link","connect","Button","Score","Component","CalculateWPM","props","totalTime","endTime","words","wordCount","Math","round","toFixed","testFunct","post","score","user","then","res","console","log","render","isAuthenticated","mapStateToProps","state","token"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAAUC,OAAV,QAAyB,aAAzB;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;;AAEA,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAIlCC,YAJkC,GAIlBC,KAAD,IAAW;AACxB,YAAMC,SAAS,GAAGD,KAAK,CAACE,OAAN,IAAiB,OAAO,EAAxB,CAAlB;AACA,YAAMC,KAAK,GAAGH,KAAK,CAACI,SAAN,GAAkB,CAAhC;AACA,aAAO,CAACC,IAAI,CAACC,KAAL,CAAWH,KAAK,GAAGF,SAAR,GAAoB,GAA/B,IAAsC,GAAvC,EAA4CM,OAA5C,CAAoD,CAApD,CAAP;AACD,KARiC;;AAAA,SAUlCC,SAVkC,GAUtB,MAAM;AAChB,aAAOf,KAAK,CAACgB,IAAN,CAAW,4BAAX,EAAyC;AAC9CC,QAAAA,KAAK,EAAE,KAAKX,YAAL,CAAkB,KAAKC,KAAvB,CADuC;AAE9CW,QAAAA,IAAI,EAAE,KAAKX,KAAL,CAAWW;AAF6B,OAAzC,EAINC,IAJM,CAIDC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJN,CAAP;AAKD,KAhBiC;AAAA;;AAkBlCG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,EAAE,EAAC,eAAR;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBAAK,KAAKjB,YAAL,CAAkB,KAAKC,KAAvB;AAAL;AAAA;AAAA;AAAA;AAAA,cAHF,eAKE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cANF,EAQI,CAAC,KAAKA,KAAL,CAAWiB,eAAZ,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,gBAGE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,KAAKT,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAXN,eAgBE;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAqBD;;AAxCiC;;AA4CpC,MAAMU,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLF,IAAAA,eAAe,EAAEE,KAAK,CAACC,KAAN,KAAgB,IAD5B;AAELT,IAAAA,IAAI,EAAEQ,KAAK,CAACR;AAFP,GAAP;AAID,CALD;;AAOA,eAAehB,OAAO,CAACuB,eAAD,CAAP,CAAyBrB,KAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport  { connect } from 'react-redux';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nclass Score extends React.Component {\r\n  \r\n  //function to calculate wpm based on props.wordCounter and props.endTime\r\n  //Algorythm is WPM = (words/5)/time(min)\r\n  CalculateWPM = (props) => {\r\n    const totalTime = props.endTime / (1000 * 60);\r\n    const words = props.wordCount / 5;\r\n    return (Math.round(words / totalTime * 100) / 100).toFixed(2);\r\n  }\r\n  \r\n  testFunct = () => {\r\n    return axios.post('http://127.0.0.1:8000/api/', {\r\n      score: this.CalculateWPM(this.props),\r\n      user: this.props.user\r\n    })\r\n    .then(res => console.log(res))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"end-game-text\">\r\n        <h3>Congratulations! You completed the test.</h3>\r\n        <h3>Your WPM is</h3>\r\n        <h2>{this.CalculateWPM(this.props)}</h2>\r\n\r\n        <div className=\"gap-20\"></div>\r\n        <div className=\"gap-20\"></div>\r\n        {\r\n          !this.props.isAuthenticated ?\r\n            <p>Login in if you want to post your results to the leaderboards!!</p>\r\n            :\r\n            <div>\r\n              <p>Post your results to the leaderboards</p>\r\n              <Button onClick={this.testFunct}>Post</Button>\r\n            </div>\r\n        }\r\n        <p></p>\r\n\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.token !== null,\r\n    user: state.user\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Score);"]},"metadata":{},"sourceType":"module"}