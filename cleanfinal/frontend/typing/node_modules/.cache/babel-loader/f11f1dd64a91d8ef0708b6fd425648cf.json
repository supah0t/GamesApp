{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ody\\\\Desktop\\\\prog\\\\cs50web\\\\finalapp\\\\cleanfinal\\\\frontend\\\\typing\\\\src\\\\containers\\\\Login.js\";\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport * as actions from '../store/actions/auth';\nimport './containers.css';\n\nclass LoginForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      const username = event.target.elements.username.value;\n      const password = event.target.elements.password.value;\n\n      if (username !== null && password !== null) {\n        this.props.onAuth(username, password);\n      }\n\n      this.props.history.push('/');\n    };\n  }\n\n  render() {\n    let errorMessage = null;\n\n    if (this.props.error) {\n      errorMessage = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.props.error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submit-form\",\n      children: [errorMessage, this.props.loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        variant: \"info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: event => this.handleFormSubmit(event),\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"validationCustom01\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            name: \"username\",\n            type: \"username\",\n            placeholder: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            children: \"Looks Good!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gap-20\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            name: \"password\",\n            type: \"password\",\n            placeholder: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gap-20\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), \"\\xA0 Or \\xA0\", /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/signup\",\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, password) => dispatch(actions.authLogin(username, password))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);","map":{"version":3,"sources":["C:/Users/Ody/Desktop/prog/cs50web/finalapp/cleanfinal/frontend/typing/src/containers/Login.js"],"names":["React","Form","Button","Spinner","connect","NavLink","actions","LoginForm","Component","handleFormSubmit","event","preventDefault","username","target","elements","value","password","props","onAuth","history","push","render","errorMessage","error","message","loading","mapStateToProps","state","mapDispatchToProps","dispatch","authLogin"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport * as actions from '../store/actions/auth';\r\n\r\nimport './containers.css';\r\n\r\nclass LoginForm extends React.Component {\r\n\r\n  handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    const username = event.target.elements.username.value;\r\n    const password = event.target.elements.password.value;\r\n\r\n    if (username !== null && password !== null) {\r\n      this.props.onAuth(username, password);\r\n    }\r\n    this.props.history.push('/');\r\n  }\r\n\r\n  render() {\r\n\r\n    let errorMessage = null;\r\n    if (this.props.error) {\r\n      errorMessage = (\r\n        <p>{this.props.error.message}</p>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {errorMessage}\r\n        {\r\n          this.props.loading ?\r\n            <Spinner animation=\"border\" variant=\"info\" />\r\n            :\r\n            <Form onSubmit={(event) => this.handleFormSubmit(event)}>\r\n              <Form.Group controlId=\"validationCustom01\">\r\n                <Form.Label>Username</Form.Label>\r\n                <Form.Control required name=\"username\" type=\"username\" placeholder=\"Username\" />\r\n                <Form.Control.Feedback>Looks Good!</Form.Control.Feedback>\r\n              </Form.Group>\r\n\r\n              <div className=\"gap-20\"></div>\r\n\r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control name=\"password\" type=\"password\" placeholder=\"Password\" />\r\n              </Form.Group>\r\n\r\n              <div className=\"gap-20\"></div>\r\n\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Login\r\n            </Button>\r\n            &nbsp; Or &nbsp;\r\n            <NavLink to=\"/signup\">Signup</NavLink>\r\n\r\n            </Form>\r\n\r\n        }\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.loading,\r\n    error: state.error\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAuth: (username, password) => dispatch(actions.authLogin(username, password))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);"]},"metadata":{},"sourceType":"module"}