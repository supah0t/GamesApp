{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ody\\\\desktop\\\\prog\\\\cs50web\\\\finalapp\\\\cleanfinal\\\\frontend\\\\typing\\\\src\\\\containers\\\\TypingGame.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form';\n\nclass TypingGame extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateResponse = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.nextWord = event => {\n      if (event.code === 'Space') {\n        const word = this.state.input;\n\n        if (word.replace(\" \", \"\") === this.state.words.substr(this.state.counter, this.state.words.indexOf(\" \"))) {\n          this.setState({\n            score: this.state.score + 1,\n            input: \"\",\n            counter: this.state.counter + 1\n          });\n        } else {\n          this.setState({\n            input: \"\"\n          });\n        }\n      }\n    };\n\n    this.state = {\n      words: [],\n      score: 0,\n      counter: 0,\n      input: \"\"\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://en.wikipedia.org/api/rest_v1/page/random/summary').then(res => {\n      console.log(res.data.extract);\n      const data = res.data.extract;\n      this.setState(() => ({\n        words: data\n      }));\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"typing-test\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.words\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gap-20\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        onKeyPress: this.nextWord,\n        onChange: this.updateResponse,\n        value: this.state.input,\n        className: \"form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gap-20\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Score: \", this.state.score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Counter: \", this.state.counter]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TypingGame;","map":{"version":3,"sources":["C:/Users/Ody/desktop/prog/cs50web/finalapp/cleanfinal/frontend/typing/src/containers/TypingGame.js"],"names":["React","axios","Form","TypingGame","Component","constructor","props","updateResponse","event","setState","input","target","value","nextWord","code","word","state","replace","words","substr","counter","indexOf","score","componentDidMount","get","then","res","console","log","data","extract","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP,MAAiB,sBAAjB;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AAEvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAqBnBC,cArBmB,GAqBDC,KAAD,IAAW;AAC1B,WAAKC,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAEF,KAAK,CAACG,MAAN,CAAaC;AADR,OAAd;AAGD,KAzBkB;;AAAA,SA2BnBC,QA3BmB,GA2BPL,KAAD,IAAW;AACpB,UAAIA,KAAK,CAACM,IAAN,KAAe,OAAnB,EAA4B;AAC1B,cAAMC,IAAI,GAAG,KAAKC,KAAL,CAAWN,KAAxB;;AACA,YAAIK,IAAI,CAACE,OAAL,CAAa,GAAb,EAAkB,EAAlB,MAA0B,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwB,KAAKH,KAAL,CAAWI,OAAnC,EAA4C,KAAKJ,KAAL,CAAWE,KAAX,CAAiBG,OAAjB,CAAyB,GAAzB,CAA5C,CAA9B,EAA0G;AACxG,eAAKZ,QAAL,CAAc;AACZa,YAAAA,KAAK,EAAE,KAAKN,KAAL,CAAWM,KAAX,GAAmB,CADd;AAEZZ,YAAAA,KAAK,EAAE,EAFK;AAGZU,YAAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWI,OAAX,GAAqB;AAHlB,WAAd;AAKD,SAND,MAMO;AACL,eAAKX,QAAL,CAAc;AACZC,YAAAA,KAAK,EAAE;AADK,WAAd;AAGD;AACF;AACF,KA1CkB;;AAEjB,SAAKM,KAAL,GAAa;AACXE,MAAAA,KAAK,EAAE,EADI;AAEXI,MAAAA,KAAK,EAAE,CAFI;AAGXF,MAAAA,OAAO,EAAE,CAHE;AAIXV,MAAAA,KAAK,EAAE;AAJI,KAAb;AAMD;;AAEDa,EAAAA,iBAAiB,GAAG;AAClBtB,IAAAA,KAAK,CAACuB,GAAN,CAAU,0DAAV,EACCC,IADD,CACMC,GAAG,IAAI;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASC,OAArB;AACA,YAAMD,IAAI,GAAGH,GAAG,CAACG,IAAJ,CAASC,OAAtB;AACA,WAAKrB,QAAL,CAAc,OAAO;AACnBS,QAAAA,KAAK,EAAEW;AADY,OAAP,CAAd;AAGD,KAPD;AAQD;;AAyBDE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BAKE;AAAA,kBAAM,KAAKf,KAAL,CAAWE;AAAjB;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cANF,eAOE,QAAC,IAAD,CAAM,OAAN;AAAc,QAAA,UAAU,EAAE,KAAKL,QAA/B;AAAyC,QAAA,QAAQ,EAAE,KAAKN,cAAxD;AAAwE,QAAA,KAAK,EAAE,KAAKS,KAAL,CAAWN,KAA1F;AAAiG,QAAA,SAAS,EAAC;AAA3G;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cARF,eAUE;AAAA,8BAAa,KAAKM,KAAL,CAAWM,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE;AAAA,gCAAe,KAAKN,KAAL,CAAWI,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;;AA/DsC;;AAmEzC,eAAejB,UAAf","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nclass TypingGame extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      words: [],\r\n      score: 0,\r\n      counter: 0,\r\n      input: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('https://en.wikipedia.org/api/rest_v1/page/random/summary')\r\n    .then(res => {\r\n      console.log(res.data.extract);\r\n      const data = res.data.extract;\r\n      this.setState(() => ({\r\n        words: data\r\n      }));\r\n    })\r\n  }\r\n  \r\n  updateResponse = (event) => {\r\n    this.setState({\r\n      input: event.target.value\r\n    })\r\n  }\r\n\r\n  nextWord = (event) => {\r\n    if (event.code === 'Space') {\r\n      const word = this.state.input;\r\n      if (word.replace(\" \", \"\") === this.state.words.substr(this.state.counter, this.state.words.indexOf(\" \"))) {\r\n        this.setState({\r\n          score: this.state.score + 1,\r\n          input: \"\",\r\n          counter: this.state.counter + 1\r\n        })  \r\n      } else {\r\n        this.setState({\r\n          input: \"\"\r\n        })\r\n      }\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"typing-test\">\r\n        {/* <div>{this.state.words.map((word) =>\r\n          <span className=\"test-words\">{word}&nbsp;</span>\r\n        )}\r\n        </div> */}\r\n        <div>{this.state.words}</div>\r\n        <div className=\"gap-20\"></div>\r\n        <Form.Control onKeyPress={this.nextWord} onChange={this.updateResponse} value={this.state.input} className=\"form\"/>\r\n        <div className=\"gap-20\"></div>\r\n        \r\n        <div>Score: {this.state.score}</div>\r\n        <div>Counter: {this.state.counter}</div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default TypingGame;"]},"metadata":{},"sourceType":"module"}