{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ody\\\\Desktop\\\\prog\\\\cs50web\\\\finalapp\\\\cleanfinal\\\\frontend\\\\typing\\\\src\\\\components\\\\GameComplete.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\n\nclass Score extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.CalculateWPM = () => {\n      return this.state.score;\n    };\n\n    this.state = { ...props\n    };\n  }\n\n  //function to calculate wpm based on props.wordCounter and props.endTime\n  //Algorythm is WPM = (words/5)/time(min)\n  // CalculateWPM = (startTime, endTime, wordCount) => {\n  //   const totalTime = (endTime - startTime) / 1000;\n  //   const words = wordCount / 5;\n  //   return words/totalTime;\n  // }\n  testFunct() {\n    console.log(\"Posted\");\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Congratulations! You completed the test.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your WPM is\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: this.CalculateWPM(this.props.startTime, this.props.endTime, this.props.wordCount)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gap-20\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gap-20\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), !this.props.isAuthenticated ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Login in if you want to post your results to the leaderboards!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Post your results to the leaderboards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.testFunct,\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.token !== null\n  };\n};\n\nexport default connect(mapStateToProps)(Score);","map":{"version":3,"sources":["C:/Users/Ody/Desktop/prog/cs50web/finalapp/cleanfinal/frontend/typing/src/components/GameComplete.js"],"names":["React","Link","connect","Button","Score","Component","constructor","props","CalculateWPM","state","score","testFunct","console","log","render","startTime","endTime","wordCount","isAuthenticated","mapStateToProps","token"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAAUC,OAAV,QAAyB,aAAzB;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;;AAEA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAoC;AAElCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAOnBC,YAPmB,GAOJ,MAAM;AACnB,aAAO,KAAKC,KAAL,CAAWC,KAAlB;AACD,KATkB;;AAEjB,SAAKD,KAAL,GAAa,EACX,GAAGF;AADQ,KAAb;AAGD;;AAMD;AACA;AACA;AACA;AACA;AACA;AACA;AAEAI,EAAAA,SAAS,GAAG;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBAAK,KAAKN,YAAL,CAAkB,KAAKD,KAAL,CAAWQ,SAA7B,EAAwC,KAAKR,KAAL,CAAWS,OAAnD,EAA4D,KAAKT,KAAL,CAAWU,SAAvE;AAAL;AAAA;AAAA;AAAA;AAAA,cAHF,eAKE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cANF,EAQI,CAAC,KAAKV,KAAL,CAAWW,eAAZ,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,gBAGE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,KAAKP,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAXN,eAgBE;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAqBD;;AA/CiC;;AAmDpC,MAAMQ,eAAe,GAAGV,KAAK,IAAI;AAC/B,SAAO;AACLS,IAAAA,eAAe,EAAET,KAAK,CAACW,KAAN,KAAgB;AAD5B,GAAP;AAGD,CAJD;;AAMA,eAAelB,OAAO,CAACiB,eAAD,CAAP,CAAyBf,KAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport  { connect } from 'react-redux';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nclass Score extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ...props\r\n    }\r\n  }\r\n  \r\n  CalculateWPM = () => {\r\n    return this.state.score;\r\n  }\r\n  \r\n  //function to calculate wpm based on props.wordCounter and props.endTime\r\n  //Algorythm is WPM = (words/5)/time(min)\r\n  // CalculateWPM = (startTime, endTime, wordCount) => {\r\n  //   const totalTime = (endTime - startTime) / 1000;\r\n  //   const words = wordCount / 5;\r\n  //   return words/totalTime;\r\n  // }\r\n  \r\n  testFunct() {\r\n    console.log(\"Posted\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>Congratulations! You completed the test.</h3>\r\n        <h3>Your WPM is</h3>\r\n        <h2>{this.CalculateWPM(this.props.startTime, this.props.endTime, this.props.wordCount)}</h2>\r\n\r\n        <div className=\"gap-20\"></div>\r\n        <div className=\"gap-20\"></div>\r\n        {\r\n          !this.props.isAuthenticated ?\r\n            <p>Login in if you want to post your results to the leaderboards!!</p>\r\n            :\r\n            <div>\r\n              <p>Post your results to the leaderboards</p>\r\n              <Button onClick={this.testFunct}>Post</Button>\r\n            </div>\r\n        }\r\n        <p></p>\r\n\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.token !== null\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Score);"]},"metadata":{},"sourceType":"module"}