{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Ody\\\\Desktop\\\\prog\\\\cs50web\\\\finalapp\\\\cleanfinal\\\\frontend\\\\typing\\\\src\\\\containers\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport * as actions from '../store/actions/auth';\nimport './containers.css';\n\nfunction LoginForm(props) {\n  _s();\n\n  const [validated, setValidated] = useState(false);\n\n  const handleFormSubmit = event => {\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    setValidated(true); // else {\n    //   setValidated(true);\n    //   const username = event.target.elements.username.value;\n    //   const password = event.target.elements.password.value;\n    //   props.onAuth(username, password);\n    //   props.history.push('/');\n    // }\n  };\n\n  let errorMessage = null;\n\n  if (props.error) {\n    errorMessage = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"submit-form\",\n    children: [errorMessage, props.loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\",\n      variant: \"info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Form, {\n      noValidate: true,\n      validated: validated,\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"validationCustom01\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          name: \"username\",\n          type: \"username\",\n          placeholder: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          children: \"Looks Good!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gap-20\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBasicPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          name: \"password\",\n          type: \"password\",\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gap-20\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), \"\\xA0 Or \\xA0\", /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/signup\",\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginForm, \"otD17mARj5mKZHrEMvBAd47slX0=\");\n\n_c = LoginForm;\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, password) => dispatch(actions.authLogin(username, password))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["C:/Users/Ody/Desktop/prog/cs50web/finalapp/cleanfinal/frontend/typing/src/containers/Login.js"],"names":["React","useState","useEffect","Form","Button","Spinner","connect","NavLink","actions","LoginForm","props","validated","setValidated","handleFormSubmit","event","form","currentTarget","checkValidity","preventDefault","stopPropagation","errorMessage","error","message","loading","mapStateToProps","state","mapDispatchToProps","dispatch","onAuth","username","password","authLogin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nimport {connect} from 'react-redux';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nimport * as actions from '../store/actions/auth';\r\n\r\nimport './containers.css';\r\n\r\nfunction LoginForm(props) {\r\n  \r\n  const [validated, setValidated] = useState(false);\r\n  \r\n  const handleFormSubmit = (event) => {\r\n    const form = event.currentTarget;\r\n    \r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    } \r\n    \r\n    setValidated(true);\r\n    // else {\r\n    //   setValidated(true);\r\n    //   const username = event.target.elements.username.value;\r\n    //   const password = event.target.elements.password.value;\r\n    //   props.onAuth(username, password);\r\n    //   props.history.push('/');\r\n    // }\r\n  }\r\n    \r\n  let errorMessage = null;\r\n  if (props.error) {\r\n    errorMessage = (\r\n      <p>{props.error.message}</p>\r\n    );\r\n  }\r\n    \r\n  return (\r\n    <div className=\"submit-form\">\r\n      { errorMessage }\r\n      {\r\n        props.loading ?\r\n          <Spinner animation=\"border\" variant=\"info\" />\r\n        :\r\n        <Form noValidate validated={ validated } onSubmit={handleFormSubmit}>\r\n          <Form.Group controlId=\"validationCustom01\">\r\n            <Form.Label>Username</Form.Label>\r\n            <Form.Control required name=\"username\" type=\"username\" placeholder=\"Username\" />\r\n            <Form.Control.Feedback>Looks Good!</Form.Control.Feedback>\r\n          </Form.Group>\r\n          \r\n          <div className=\"gap-20\"></div>\r\n\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control required name=\"password\" type=\"password\" placeholder=\"Password\" />\r\n          </Form.Group>\r\n\r\n          <div className=\"gap-20\"></div>\r\n\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Login\r\n          </Button>\r\n          &nbsp; Or &nbsp;\r\n          <NavLink to=\"/signup\">Signup</NavLink>\r\n          \r\n        </Form>\r\n      \r\n      }\r\n      \r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.loading,\r\n    error: state.error\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAuth: (username, password) => dispatch(actions.authLogin(username, password))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);"]},"metadata":{},"sourceType":"module"}