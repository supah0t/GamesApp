{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ody\\\\Desktop\\\\prog\\\\cs50web\\\\finalapp\\\\cleanfinal\\\\frontend\\\\typing\\\\src\\\\containers\\\\Register.js\";\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport * as actions from '../store/actions/auth';\nimport './containers.css';\n\nclass SignupForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.redirect = () => {\n      if (this.props.isAuthenticated) {\n        this.props.history.push('/');\n      }\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      const username = event.target.elements.username.value;\n      const password1 = event.target.elements.password1.value;\n      const password2 = event.target.elements.password2.value;\n      const email = event.target.elements.email.value;\n\n      if (password1 === password2) {\n        this.props.onAuth(username, password1, password2, email);\n        this.redirect();\n      }\n    };\n  }\n\n  render() {\n    let errorMessage = null;\n\n    if (this.props.error) {\n      errorMessage = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.props.error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submit-form\",\n      children: [errorMessage, this.props.loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        variant: \"info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: event => this.handleFormSubmit(event),\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            name: \"username\",\n            type: \"username\",\n            placeholder: \"Enter Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gap-20\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            name: \"email\",\n            type: \"email\",\n            placeholder: \"Enter email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gap-20\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            name: \"password1\",\n            type: \"password\",\n            placeholder: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gap-20\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            name: \"password2\",\n            type: \"password\",\n            placeholder: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gap-20\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this), \"\\xA0 Or \\xA0\", /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    error: state.error,\n    isAuthenticated: state.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, password1, password2, email) => dispatch(actions.authSignup(username, password1, password2, email))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignupForm);","map":{"version":3,"sources":["C:/Users/Ody/Desktop/prog/cs50web/finalapp/cleanfinal/frontend/typing/src/containers/Register.js"],"names":["React","Form","Button","Spinner","connect","NavLink","actions","SignupForm","Component","redirect","props","isAuthenticated","history","push","handleFormSubmit","event","preventDefault","username","target","elements","value","password1","password2","email","onAuth","render","errorMessage","error","message","loading","mapStateToProps","state","token","mapDispatchToProps","dispatch","authSignup"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;AAEA,OAAO,kBAAP;;AAEA,MAAMC,UAAN,SAAyBP,KAAK,CAACQ,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAEvCC,QAFuC,GAE5B,MAAM;AACf,UAAI,KAAKC,KAAL,CAAWC,eAAf,EAAgC;AAC9B,aAAKD,KAAL,CAAWE,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD;AACF,KANsC;;AAAA,SAQvCC,gBARuC,GAQnBC,KAAD,IAAW;AAC5BA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAN,CAAaC,QAAb,CAAsBF,QAAtB,CAA+BG,KAAhD;AACA,YAAMC,SAAS,GAAGN,KAAK,CAACG,MAAN,CAAaC,QAAb,CAAsBE,SAAtB,CAAgCD,KAAlD;AACA,YAAME,SAAS,GAAGP,KAAK,CAACG,MAAN,CAAaC,QAAb,CAAsBG,SAAtB,CAAgCF,KAAlD;AACA,YAAMG,KAAK,GAAGR,KAAK,CAACG,MAAN,CAAaC,QAAb,CAAsBI,KAAtB,CAA4BH,KAA1C;;AAEA,UAAIC,SAAS,KAAKC,SAAlB,EAA6B;AAC3B,aAAKZ,KAAL,CAAWc,MAAX,CAAkBP,QAAlB,EAA4BI,SAA5B,EAAuCC,SAAvC,EAAkDC,KAAlD;AACA,aAAKd,QAAL;AACD;AACF,KAnBsC;AAAA;;AAsBvCgB,EAAAA,MAAM,GAAG;AAEP,QAAIC,YAAY,GAAG,IAAnB;;AACA,QAAI,KAAKhB,KAAL,CAAWiB,KAAf,EAAsB;AACpBD,MAAAA,YAAY,gBACV;AAAA,kBAAI,KAAKhB,KAAL,CAAWiB,KAAX,CAAiBC;AAArB;AAAA;AAAA;AAAA;AAAA,cADF;AAGD;;AAED,wBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,iBACGF,YADH,EAGI,KAAKhB,KAAL,CAAWmB,OAAX,gBACE,QAAC,OAAD;AAAS,QAAA,SAAS,EAAC,QAAnB;AAA4B,QAAA,OAAO,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,cADF,gBAGE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAGd,KAAD,IAAW,KAAKD,gBAAL,CAAsBC,KAAtB,CAA3B;AAAA,gCAEE,QAAC,IAAD,CAAM,KAAN;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,IAAI,EAAC,UAAnB;AAA8B,YAAA,IAAI,EAAC,UAAnC;AAA8C,YAAA,WAAW,EAAC;AAA1D;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAOE;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAPF,eASE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,gBAAtB;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,IAAI,EAAC,OAAnB;AAA2B,YAAA,IAAI,EAAC,OAAhC;AAAwC,YAAA,WAAW,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,eAcE;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAdF,eAgBE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,mBAAtB;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,IAAI,EAAC,WAAnB;AAA+B,YAAA,IAAI,EAAC,UAApC;AAA+C,YAAA,WAAW,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF,eAqBE;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBArBF,eAuBE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,mBAAtB;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,IAAI,EAAC,WAAnB;AAA+B,YAAA,IAAI,EAAC,UAApC;AAA+C,YAAA,WAAW,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvBF,eA4BE;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBA5BF,eA8BE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,SAAhB;AAA0B,UAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9BF,+BAkCE,QAAC,OAAD;AAAS,UAAA,EAAE,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlCF;AAAA;AAAA;AAAA;AAAA;AAAA,cANN;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA8CD;;AA7EsC;;AAgFzC,MAAMe,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLF,IAAAA,OAAO,EAAEE,KAAK,CAACF,OADV;AAELF,IAAAA,KAAK,EAAEI,KAAK,CAACJ,KAFR;AAGLhB,IAAAA,eAAe,EAAEoB,KAAK,CAACC,KAAN,KAAgB;AAH5B,GAAP;AAKD,CAND;;AAQA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLV,IAAAA,MAAM,EAAE,CAACP,QAAD,EAAWI,SAAX,EAAsBC,SAAtB,EAAiCC,KAAjC,KAA2CW,QAAQ,CAAC5B,OAAO,CAAC6B,UAAR,CAAmBlB,QAAnB,EAA6BI,SAA7B,EAAwCC,SAAxC,EAAmDC,KAAnD,CAAD;AADtD,GAAP;AAGD,CAJD;;AAMA,eAAenB,OAAO,CAAC0B,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C1B,UAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport * as actions from '../store/actions/auth';\r\n\r\nimport './containers.css';\r\n\r\nclass SignupForm extends React.Component {\r\n\r\n  redirect = () => {\r\n    if (this.props.isAuthenticated) {\r\n      this.props.history.push('/');\r\n    }\r\n  }\r\n  \r\n  handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    const username = event.target.elements.username.value;\r\n    const password1 = event.target.elements.password1.value;\r\n    const password2 = event.target.elements.password2.value;\r\n    const email = event.target.elements.email.value;\r\n\r\n    if (password1 === password2) {\r\n      this.props.onAuth(username, password1, password2, email);\r\n      this.redirect();\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    let errorMessage = null;\r\n    if (this.props.error) {\r\n      errorMessage = (\r\n        <p>{this.props.error.message}</p>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {errorMessage}\r\n        {\r\n          this.props.loading ?\r\n            <Spinner animation=\"border\" variant=\"info\" />\r\n            :\r\n            <Form onSubmit={(event) => this.handleFormSubmit(event)}>\r\n\r\n              <Form.Group>\r\n                <Form.Label>Username</Form.Label>\r\n                <Form.Control name=\"username\" type=\"username\" placeholder=\"Enter Username\" />\r\n              </Form.Group>\r\n              \r\n              <div className=\"gap-20\"></div>\r\n\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control name=\"email\" type=\"email\" placeholder=\"Enter email\" />\r\n              </Form.Group>\r\n\r\n              <div className=\"gap-20\"></div>\r\n\r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control name=\"password1\" type=\"password\" placeholder=\"Password\" />\r\n              </Form.Group>\r\n              \r\n              <div className=\"gap-20\"></div>\r\n\r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Confirm Password</Form.Label>\r\n                <Form.Control name=\"password2\" type=\"password\" placeholder=\"Confirm Password\" />\r\n              </Form.Group>\r\n\r\n              <div className=\"gap-20\"></div>\r\n              \r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Signup\r\n              </Button>\r\n              &nbsp; Or &nbsp;\r\n              <NavLink to=\"/login\">Login</NavLink>\r\n            </Form>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.loading,\r\n    error: state.error,\r\n    isAuthenticated: state.token !== null\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAuth: (username, password1, password2, email) => dispatch(actions.authSignup(username, password1, password2, email))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignupForm);"]},"metadata":{},"sourceType":"module"}